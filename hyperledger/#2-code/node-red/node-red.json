[
    {
       "id":"a55b348f.7aa738",
       "type":"tab",
       "label":"Simulated Route",
       "disabled":false,
       "info":""
    },
    {
       "id":"939000b1.86a178",
       "type":"tab",
       "label":"Init Persishable Blockchain",
       "disabled":false,
       "info":""
    },
    {
       "id":"321651a3.d3511e",
       "type":"tab",
       "label":"Start Particle Electron",
       "disabled":false,
       "info":""
    },
    {
       "id":"543de17.27c702",
       "type":"tab",
       "label":"Particle Receiver",
       "disabled":false,
       "info":""
    },
    {
       "id":"85208c41.97d0e",
       "type":"tab",
       "label":"Blockchain REST API",
       "disabled":false,
       "info":""
    },
    {
       "id":"311fef0c.4f3fa",
       "type":"tab",
       "label":"Load Blockchain",
       "disabled":false,
       "info":""
    },
    {
       "id":"7d4f4176.f904a",
       "type":"tab",
       "label":"IoT Asset Dashboard",
       "disabled":false,
       "info":""
    },
    {
       "id":"27b5fae0.d780ee",
       "type":"tab",
       "label":"Track Asset History",
       "disabled":false
    },
    {
       "id":"271a8e60.567732",
       "type":"ui_group",
       "z":"",
       "name":"Start Particle Electron Geolocation",
       "tab":"1f9ac75c.ccfdd9",
       "order":1,
       "disp":true,
       "width":"12"
    },
    {
       "id":"1f9ac75c.ccfdd9",
       "type":"ui_tab",
       "z":"",
       "name":"Start Particle Geolocation Reporting",
       "icon":"dashboard",
       "order":3
    },
    {
       "id":"91eea23.79b656",
       "type":"ui_base",
       "theme":{
          "name":"theme-light",
          "lightTheme":{
             "default":"#0094CE",
             "baseColor":"#0094CE",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":true,
             "reset":false
          },
          "darkTheme":{
             "default":"#097479",
             "baseColor":"#097479",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":false
          },
          "customTheme":{
             "name":"Untitled Theme 1",
             "default":"#4B7930",
             "baseColor":"#4B7930",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
          },
          "themeState":{
             "base-color":{
                "default":"#0094CE",
                "value":"#0094CE",
                "edited":false
             },
             "page-titlebar-backgroundColor":{
                "value":"#0094CE",
                "edited":false
             },
             "page-backgroundColor":{
                "value":"#fafafa",
                "edited":false
             },
             "page-sidebar-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-textColor":{
                "value":"#1bbfff",
                "edited":false
             },
             "group-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "widget-textColor":{
                "value":"#111111",
                "edited":false
             },
             "widget-backgroundColor":{
                "value":"#0094ce",
                "edited":false
             },
             "widget-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "base-font":{
                "value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
             }
          }
       },
       "site":{
          "name":"Node-RED Dashboard",
          "hideToolbar":"false",
          "allowSwipe":"false",
          "dateFormat":"DD/MM/YYYY",
          "sizes":{
             "sx":48,
             "sy":48,
             "gx":6,
             "gy":6,
             "cx":6,
             "cy":6,
             "px":0,
             "py":0
          }
       }
    },
    {
       "id":"3d43f933.28b9de",
       "type":"particle-cloud",
       "z":"",
       "host":"https://api.particle.io",
       "port":"443",
       "accesstoken":"",
       "name":""
    },
    {
       "id":"4203375c.1fdb6",
       "type":"ui_group",
       "z":"",
       "name":"Asset Visualization on a Map",
       "tab":"c8f477bc.0e1048",
       "order":3,
       "disp":true,
       "width":"10"
    },
    {
       "id":"eeeab6cd.fb6998",
       "type":"ui_group",
       "z":"",
       "name":"Asset Tracking",
       "tab":"c8f477bc.0e1048",
       "order":1,
       "disp":true,
       "width":"6"
    },
    {
       "id":"5e7a116a.077ae",
       "type":"ui_group",
       "z":"",
       "name":"Geo Coordinate Location Data",
       "tab":"c8f477bc.0e1048",
       "order":3,
       "disp":true,
       "width":"11"
    },
    {
       "id":"c8f477bc.0e1048",
       "type":"ui_tab",
       "z":"",
       "name":"Developer View of IoT Asset Tracking using BlockChain ",
       "icon":"dashboard"
    },
    {
       "id":"1cc3de53.1ddb22",
       "type":"ui_group",
       "z":"",
       "name":"Query Particle Electron",
       "tab":"1f9ac75c.ccfdd9",
       "order":2,
       "disp":true,
       "width":"6",
       "collapse":false
    },
    {
       "id":"7a3ea6b9.14a9f",
       "type":"ui_group",
       "z":"",
       "name":"Start Particle Electron Geolocation",
       "tab":"7bfee65.8ffd998",
       "order":1,
       "disp":true,
       "width":"12"
    },
    {
       "id":"7bfee65.8ffd998",
       "type":"ui_tab",
       "z":"",
       "name":"Start Particle Geolocation Reporting",
       "icon":"dashboard",
       "order":3
    },
    {
       "id":"2181211d.f9d4ce",
       "type":"ui_base",
       "theme":{
          "name":"theme-light",
          "lightTheme":{
             "default":"#0094CE",
             "baseColor":"#0094CE",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":true,
             "reset":false
          },
          "darkTheme":{
             "default":"#097479",
             "baseColor":"#097479",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":false
          },
          "customTheme":{
             "name":"Untitled Theme 1",
             "default":"#4B7930",
             "baseColor":"#4B7930",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
          },
          "themeState":{
             "base-color":{
                "default":"#0094CE",
                "value":"#0094CE",
                "edited":false
             },
             "page-titlebar-backgroundColor":{
                "value":"#0094CE",
                "edited":false
             },
             "page-backgroundColor":{
                "value":"#fafafa",
                "edited":false
             },
             "page-sidebar-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-textColor":{
                "value":"#1bbfff",
                "edited":false
             },
             "group-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "widget-textColor":{
                "value":"#111111",
                "edited":false
             },
             "widget-backgroundColor":{
                "value":"#0094ce",
                "edited":false
             },
             "widget-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "base-font":{
                "value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
             }
          }
       },
       "site":{
          "name":"Node-RED Dashboard",
          "hideToolbar":"false",
          "allowSwipe":"false",
          "dateFormat":"DD/MM/YYYY",
          "sizes":{
             "sx":48,
             "sy":48,
             "gx":6,
             "gy":6,
             "cx":6,
             "cy":6,
             "px":0,
             "py":0
          }
       }
    },
    {
       "id":"a642527a.339b98",
       "type":"particle-cloud",
       "z":"",
       "host":"https://api.particle.io",
       "port":"443",
       "accesstoken":"",
       "name":""
    },
    {
       "id":"1373accb.c0efa3",
       "type":"ui_group",
       "z":"",
       "name":"Asset Visualization on a Map",
       "tab":"5d9b0cc5.b27c14",
       "order":3,
       "disp":true,
       "width":"10"
    },
    {
       "id":"a8e3c254.3dde3",
       "type":"ui_group",
       "z":"",
       "name":"Asset Tracking",
       "tab":"5d9b0cc5.b27c14",
       "order":1,
       "disp":true,
       "width":"6"
    },
    {
       "id":"e9e34ca0.fbc5b8",
       "type":"ui_group",
       "z":"",
       "name":"Geo Coordinate Location Data",
       "tab":"5d9b0cc5.b27c14",
       "order":3,
       "disp":true,
       "width":"11"
    },
    {
       "id":"d82bef90.64837",
       "type":"twilio-api",
       "z":"",
       "name":"",
       "sid":"ACc662d8bec298af6e95e6e4194cf7ce3b",
       "from":"5512226866 "
    },
    {
       "id":"5d9b0cc5.b27c14",
       "type":"ui_tab",
       "z":"",
       "name":"Developer View of IoT Asset Tracking using BlockChain ",
       "icon":"dashboard"
    },
    {
       "id":"6cfcdcc1.c90214",
       "type":"ui_group",
       "z":"",
       "name":"Query Particle Electron",
       "tab":"7bfee65.8ffd998",
       "order":2,
       "disp":true,
       "width":"6",
       "collapse":false
    },
    {
       "id":"a978485f.e22fa8",
       "type":"ui_group",
       "z":"",
       "name":"Start Particle Electron Geolocation",
       "tab":"5191c1fa.e25448",
       "order":1,
       "disp":true,
       "width":"12"
    },
    {
       "id":"5191c1fa.e25448",
       "type":"ui_tab",
       "z":"",
       "name":"Start Particle Geolocation Reporting",
       "icon":"dashboard",
       "order":3
    },
    {
       "id":"9a42828b.f8a848",
       "type":"ui_base",
       "theme":{
          "name":"theme-light",
          "lightTheme":{
             "default":"#0094CE",
             "baseColor":"#0094CE",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":true,
             "reset":false
          },
          "darkTheme":{
             "default":"#097479",
             "baseColor":"#097479",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":false
          },
          "customTheme":{
             "name":"Untitled Theme 1",
             "default":"#4B7930",
             "baseColor":"#4B7930",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
          },
          "themeState":{
             "base-color":{
                "default":"#0094CE",
                "value":"#0094CE",
                "edited":false
             },
             "page-titlebar-backgroundColor":{
                "value":"#0094CE",
                "edited":false
             },
             "page-backgroundColor":{
                "value":"#fafafa",
                "edited":false
             },
             "page-sidebar-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-textColor":{
                "value":"#1bbfff",
                "edited":false
             },
             "group-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "widget-textColor":{
                "value":"#111111",
                "edited":false
             },
             "widget-backgroundColor":{
                "value":"#0094ce",
                "edited":false
             },
             "widget-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "base-font":{
                "value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
             }
          }
       },
       "site":{
          "name":"Node-RED Dashboard",
          "hideToolbar":"false",
          "allowSwipe":"false",
          "dateFormat":"DD/MM/YYYY",
          "sizes":{
             "sx":48,
             "sy":48,
             "gx":6,
             "gy":6,
             "cx":6,
             "cy":6,
             "px":0,
             "py":0
          }
       }
    },
    {
       "id":"47d72914.e4478",
       "type":"particle-cloud",
       "z":"",
       "host":"https://api.particle.io",
       "port":"443",
       "accesstoken":"",
       "name":""
    },
    {
       "id":"f76c84ae.1faa9",
       "type":"ui_group",
       "z":"",
       "name":"Asset Visualization on a Map",
       "tab":"fd11afea.5a5fb",
       "order":3,
       "disp":true,
       "width":"10"
    },
    {
       "id":"3378f65c.5a0182",
       "type":"ui_group",
       "z":"",
       "name":"Asset Tracking",
       "tab":"fd11afea.5a5fb",
       "order":1,
       "disp":true,
       "width":"6"
    },
    {
       "id":"d4cc7df5.7239a",
       "type":"ui_group",
       "z":"",
       "name":"Geo Coordinate Location Data",
       "tab":"fd11afea.5a5fb",
       "order":3,
       "disp":true,
       "width":"11"
    },
    {
       "id":"ccbee25e.d594d",
       "type":"twilio-api",
       "z":"",
       "name":"",
       "sid":"ACc662d8bec298af6e95e6e4194cf7ce3b",
       "from":"5512226866 "
    },
    {
       "id":"fd11afea.5a5fb",
       "type":"ui_tab",
       "z":"",
       "name":"Developer View of IoT Asset Tracking using BlockChain ",
       "icon":"dashboard"
    },
    {
       "id":"2db2afd.89b0ed",
       "type":"ui_group",
       "z":"",
       "name":"Query Particle Electron",
       "tab":"5191c1fa.e25448",
       "order":2,
       "disp":true,
       "width":"6",
       "collapse":false
    },
    {
       "id":"9db340b3.3331b",
       "type":"ui_group",
       "z":"",
       "name":"Start Particle Electron Geolocation",
       "tab":"91b84416.5c21e",
       "order":1,
       "disp":true,
       "width":"12"
    },
    {
       "id":"91b84416.5c21e",
       "type":"ui_tab",
       "z":"",
       "name":"Start Particle Geolocation Reporting",
       "icon":"dashboard",
       "order":3
    },
    {
       "id":"8d8d0c4f.b72a6",
       "type":"ui_base",
       "theme":{
          "name":"theme-light",
          "lightTheme":{
             "default":"#0094CE",
             "baseColor":"#0094CE",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":true,
             "reset":false
          },
          "darkTheme":{
             "default":"#097479",
             "baseColor":"#097479",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
             "edited":false
          },
          "customTheme":{
             "name":"Untitled Theme 1",
             "default":"#4B7930",
             "baseColor":"#4B7930",
             "baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
          },
          "themeState":{
             "base-color":{
                "default":"#0094CE",
                "value":"#0094CE",
                "edited":false
             },
             "page-titlebar-backgroundColor":{
                "value":"#0094CE",
                "edited":false
             },
             "page-backgroundColor":{
                "value":"#fafafa",
                "edited":false
             },
             "page-sidebar-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-textColor":{
                "value":"#1bbfff",
                "edited":false
             },
             "group-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "group-backgroundColor":{
                "value":"#ffffff",
                "edited":false
             },
             "widget-textColor":{
                "value":"#111111",
                "edited":false
             },
             "widget-backgroundColor":{
                "value":"#0094ce",
                "edited":false
             },
             "widget-borderColor":{
                "value":"#ffffff",
                "edited":false
             },
             "base-font":{
                "value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
             }
          }
       },
       "site":{
          "name":"Node-RED Dashboard",
          "hideToolbar":"false",
          "allowSwipe":"false",
          "dateFormat":"DD/MM/YYYY",
          "sizes":{
             "sx":48,
             "sy":48,
             "gx":6,
             "gy":6,
             "cx":6,
             "cy":6,
             "px":0,
             "py":0
          }
       }
    },
    {
       "id":"eac7129.cc8acf",
       "type":"particle-cloud",
       "z":"",
       "host":"https://api.particle.io",
       "port":"443",
       "accesstoken":"",
       "name":""
    },
    {
       "id":"58945d88.73158c",
       "type":"ui_group",
       "z":"",
       "name":"Asset Visualization on a Map",
       "tab":"c3b94e1e.6e5ee",
       "order":3,
       "disp":true,
       "width":"10"
    },
    {
       "id":"f46724b9.82829",
       "type":"ui_group",
       "z":"",
       "name":"Asset Tracking",
       "tab":"c3b94e1e.6e5ee",
       "order":1,
       "disp":true,
       "width":"6"
    },
    {
       "id":"dd956c5e.0a29f",
       "type":"ui_group",
       "z":"",
       "name":"Geo Coordinate Location Data",
       "tab":"c3b94e1e.6e5ee",
       "order":3,
       "disp":true,
       "width":"11"
    },
    {
       "id":"8da3218b.1e59c",
       "type":"twilio-api",
       "z":"",
       "name":"",
       "sid":"ACc662d8bec298af6e95e6e4194cf7ce3b",
       "from":"5512226866 "
    },
    {
       "id":"c3b94e1e.6e5ee",
       "type":"ui_tab",
       "z":"",
       "name":"Developer View of IoT Asset Tracking using BlockChain ",
       "icon":"dashboard"
    },
    {
       "id":"77d3d700.42e9e8",
       "type":"ui_group",
       "z":"",
       "name":"Query Particle Electron",
       "tab":"91b84416.5c21e",
       "order":2,
       "disp":true,
       "width":"6",
       "collapse":false
    },
    {
       "id":"e9c13162.25a2a",
       "type":"inject",
       "z":"a55b348f.7aa738",
       "name":"",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "onceDelay":0.1,
       "x":130,
       "y":400,
       "wires":[
          [
             "5e992fb8.34bd2"
          ]
       ]
    },
    {
       "id":"5e992fb8.34bd2",
       "type":"template",
       "z":"a55b348f.7aa738",
       "name":"Paste GPX file into this Template node",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"plain",
       "template":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<gpx version=\"1.1\" creator=\"https://onthegomap.com\" xmlns=\"http://www.topografix.com/GPX/1/1\">\n  <metadata>\n    <name>7.35 km route</name>\n    <link href=\"https://onthegomap.com\"><text>On The Go Map</text></link>\n    <time>2019-04-03T19:05:47.208Z</time>\n  </metadata>\n  <rte>\n    <rtept lat=\"53.19916\" lon=\"-8.57401\"/>\n    <rtept lat=\"53.19917\" lon=\"-8.574\"/>\n    <rtept lat=\"53.19924\" lon=\"-8.57383\"/>\n    <rtept lat=\"53.19932\" lon=\"-8.5737\"/>\n    <rtept lat=\"53.19959\" lon=\"-8.57334\"/>\n    <rtept lat=\"53.19962\" lon=\"-8.57323\"/>\n    <rtept lat=\"53.19966\" lon=\"-8.57288\"/>\n    <rtept lat=\"53.19967\" lon=\"-8.57286\"/>\n    <rtept lat=\"53.19973\" lon=\"-8.57235\"/>\n    <rtept lat=\"53.19985\" lon=\"-8.57117\"/>\n    <rtept lat=\"53.20036\" lon=\"-8.57133\"/>\n    <rtept lat=\"53.20046\" lon=\"-8.57136\"/>\n    <rtept lat=\"53.20058\" lon=\"-8.5714\"/>\n    <rtept lat=\"53.20106\" lon=\"-8.57158\"/>\n    <rtept lat=\"53.20148\" lon=\"-8.57172\"/>\n    <rtept lat=\"53.20178\" lon=\"-8.57173\"/>\n    <rtept lat=\"53.2021\" lon=\"-8.5717\"/>\n    <rtept lat=\"53.20243\" lon=\"-8.57162\"/>\n    <rtept lat=\"53.20275\" lon=\"-8.57159\"/>\n    <rtept lat=\"53.20291\" lon=\"-8.57156\"/>\n    <rtept lat=\"53.20343\" lon=\"-8.57149\"/>\n    <rtept lat=\"53.20366\" lon=\"-8.57144\"/>\n    <rtept lat=\"53.20372\" lon=\"-8.57143\"/>\n    <rtept lat=\"53.20452\" lon=\"-8.57126\"/>\n    <rtept lat=\"53.2048\" lon=\"-8.57118\"/>\n    <rtept lat=\"53.20489\" lon=\"-8.57116\"/>\n    <rtept lat=\"53.20526\" lon=\"-8.57108\"/>\n    <rtept lat=\"53.20546\" lon=\"-8.57102\"/>\n    <rtept lat=\"53.20575\" lon=\"-8.57096\"/>\n    <rtept lat=\"53.20592\" lon=\"-8.5709\"/>\n    <rtept lat=\"53.20621\" lon=\"-8.57077\"/>\n    <rtept lat=\"53.20654\" lon=\"-8.57055\"/>\n    <rtept lat=\"53.20672\" lon=\"-8.57041\"/>\n    <rtept lat=\"53.20687\" lon=\"-8.57027\"/>\n    <rtept lat=\"53.20694\" lon=\"-8.57021\"/>\n    <rtept lat=\"53.20719\" lon=\"-8.56996\"/>\n    <rtept lat=\"53.2073\" lon=\"-8.5698\"/>\n    <rtept lat=\"53.20737\" lon=\"-8.56957\"/>\n    <rtept lat=\"53.20736\" lon=\"-8.5694\"/>\n    <rtept lat=\"53.20739\" lon=\"-8.56922\"/>\n    <rtept lat=\"53.20745\" lon=\"-8.56903\"/>\n    <rtept lat=\"53.20751\" lon=\"-8.56893\"/>\n    <rtept lat=\"53.2076\" lon=\"-8.56885\"/>\n    <rtept lat=\"53.20767\" lon=\"-8.56882\"/>\n    <rtept lat=\"53.20775\" lon=\"-8.56881\"/>\n    <rtept lat=\"53.2078\" lon=\"-8.56882\"/>\n    <rtept lat=\"53.20788\" lon=\"-8.56886\"/>\n    <rtept lat=\"53.20796\" lon=\"-8.56893\"/>\n    <rtept lat=\"53.20803\" lon=\"-8.56903\"/>\n    <rtept lat=\"53.20817\" lon=\"-8.56883\"/>\n    <rtept lat=\"53.20865\" lon=\"-8.56843\"/>\n    <rtept lat=\"53.20977\" lon=\"-8.56753\"/>\n    <rtept lat=\"53.21017\" lon=\"-8.56722\"/>\n    <rtept lat=\"53.21028\" lon=\"-8.56711\"/>\n    <rtept lat=\"53.21062\" lon=\"-8.5668\"/>\n    <rtept lat=\"53.21088\" lon=\"-8.5666\"/>\n    <rtept lat=\"53.21114\" lon=\"-8.56647\"/>\n    <rtept lat=\"53.21144\" lon=\"-8.56642\"/>\n    <rtept lat=\"53.21183\" lon=\"-8.56646\"/>\n    <rtept lat=\"53.21195\" lon=\"-8.56645\"/>\n    <rtept lat=\"53.21212\" lon=\"-8.56635\"/>\n    <rtept lat=\"53.21225\" lon=\"-8.56622\"/>\n    <rtept lat=\"53.2125\" lon=\"-8.56583\"/>\n    <rtept lat=\"53.21276\" lon=\"-8.56551\"/>\n    <rtept lat=\"53.21321\" lon=\"-8.56501\"/>\n    <rtept lat=\"53.21404\" lon=\"-8.56419\"/>\n    <rtept lat=\"53.2151\" lon=\"-8.56333\"/>\n    <rtept lat=\"53.21525\" lon=\"-8.56317\"/>\n    <rtept lat=\"53.21595\" lon=\"-8.56232\"/>\n    <rtept lat=\"53.21612\" lon=\"-8.56214\"/>\n    <rtept lat=\"53.21626\" lon=\"-8.56203\"/>\n    <rtept lat=\"53.21639\" lon=\"-8.56195\"/>\n    <rtept lat=\"53.21656\" lon=\"-8.5619\"/>\n    <rtept lat=\"53.21702\" lon=\"-8.56188\"/>\n    <rtept lat=\"53.21756\" lon=\"-8.56176\"/>\n    <rtept lat=\"53.21769\" lon=\"-8.5617\"/>\n    <rtept lat=\"53.21792\" lon=\"-8.56153\"/>\n    <rtept lat=\"53.21823\" lon=\"-8.56124\"/>\n    <rtept lat=\"53.21849\" lon=\"-8.56108\"/>\n    <rtept lat=\"53.22024\" lon=\"-8.56026\"/>\n    <rtept lat=\"53.22187\" lon=\"-8.55941\"/>\n    <rtept lat=\"53.22292\" lon=\"-8.55895\"/>\n    <rtept lat=\"53.22356\" lon=\"-8.55847\"/>\n    <rtept lat=\"53.22362\" lon=\"-8.55844\"/>\n    <rtept lat=\"53.22366\" lon=\"-8.55842\"/>\n    <rtept lat=\"53.22369\" lon=\"-8.55834\"/>\n    <rtept lat=\"53.22421\" lon=\"-8.55703\"/>\n    <rtept lat=\"53.22516\" lon=\"-8.55467\"/>\n    <rtept lat=\"53.22571\" lon=\"-8.55317\"/>\n    <rtept lat=\"53.22573\" lon=\"-8.55312\"/>\n    <rtept lat=\"53.2259\" lon=\"-8.55264\"/>\n    <rtept lat=\"53.22623\" lon=\"-8.55155\"/>\n    <rtept lat=\"53.22654\" lon=\"-8.55025\"/>\n    <rtept lat=\"53.22687\" lon=\"-8.54871\"/>\n    <rtept lat=\"53.22702\" lon=\"-8.54793\"/>\n    <rtept lat=\"53.22709\" lon=\"-8.54752\"/>\n    <rtept lat=\"53.22723\" lon=\"-8.54664\"/>\n    <rtept lat=\"53.22753\" lon=\"-8.54479\"/>\n    <rtept lat=\"53.22772\" lon=\"-8.54348\"/>\n    <rtept lat=\"53.22774\" lon=\"-8.54332\"/>\n    <rtept lat=\"53.22788\" lon=\"-8.54217\"/>\n    <rtept lat=\"53.22828\" lon=\"-8.53883\"/>\n    <rtept lat=\"53.22839\" lon=\"-8.53844\"/>\n    <rtept lat=\"53.22852\" lon=\"-8.53801\"/>\n    <rtept lat=\"53.22853\" lon=\"-8.53791\"/>\n    <rtept lat=\"53.22856\" lon=\"-8.53787\"/>\n    <rtept lat=\"53.22859\" lon=\"-8.53784\"/>\n    <rtept lat=\"53.22874\" lon=\"-8.53772\"/>\n    <rtept lat=\"53.23072\" lon=\"-8.53611\"/>\n    <rtept lat=\"53.23105\" lon=\"-8.53589\"/>\n    <rtept lat=\"53.23158\" lon=\"-8.53558\"/>\n    <rtept lat=\"53.23205\" lon=\"-8.53538\"/>\n    <rtept lat=\"53.23258\" lon=\"-8.53532\"/>\n    <rtept lat=\"53.23282\" lon=\"-8.53526\"/>\n    <rtept lat=\"53.23296\" lon=\"-8.53522\"/>\n    <rtept lat=\"53.23319\" lon=\"-8.53515\"/>\n    <rtept lat=\"53.2343\" lon=\"-8.53489\"/>\n    <rtept lat=\"53.23555\" lon=\"-8.53452\"/>\n    <rtept lat=\"53.23587\" lon=\"-8.5344\"/>\n    <rtept lat=\"53.2365\" lon=\"-8.53419\"/>\n    <rtept lat=\"53.23779\" lon=\"-8.53373\"/>\n    <rtept lat=\"53.23942\" lon=\"-8.53309\"/>\n    <rtept lat=\"53.24107\" lon=\"-8.53235\"/>\n    <rtept lat=\"53.24237\" lon=\"-8.53173\"/>\n    <rtept lat=\"53.24255\" lon=\"-8.53161\"/>\n    <rtept lat=\"53.24256\" lon=\"-8.53165\"/>\n    <rtept lat=\"53.24255\" lon=\"-8.53161\"/>\n    <rtept lat=\"53.24254\" lon=\"-8.53157\"/>\n    <rtept lat=\"53.2427\" lon=\"-8.53148\"/>\n    <rtept lat=\"53.24327\" lon=\"-8.53123\"/>\n    <rtept lat=\"53.24376\" lon=\"-8.53089\"/>\n    <rtept lat=\"53.24412\" lon=\"-8.5307\"/>\n    <rtept lat=\"53.24454\" lon=\"-8.53053\"/>\n    <rtept lat=\"53.24468\" lon=\"-8.53042\"/>\n    <rtept lat=\"53.24535\" lon=\"-8.52965\"/>\n    <rtept lat=\"53.24567\" lon=\"-8.52939\"/>\n    <rtept lat=\"53.24578\" lon=\"-8.52923\"/>\n    <rtept lat=\"53.24605\" lon=\"-8.52867\"/>\n    <rtept lat=\"53.24622\" lon=\"-8.52825\"/>\n    <rtept lat=\"53.2465\" lon=\"-8.52764\"/>\n    <rtept lat=\"53.24658\" lon=\"-8.52741\"/>\n    <rtept lat=\"53.24667\" lon=\"-8.5269\"/>\n    <rtept lat=\"53.24696\" lon=\"-8.52578\"/>\n    <rtept lat=\"53.24734\" lon=\"-8.52412\"/>\n    <rtept lat=\"53.24739\" lon=\"-8.52306\"/>\n    <rtept lat=\"53.24742\" lon=\"-8.52298\"/>\n    <rtept lat=\"53.24749\" lon=\"-8.5229\"/>\n    <rtept lat=\"53.24778\" lon=\"-8.52303\"/>\n    <rtept lat=\"53.24788\" lon=\"-8.52305\"/>\n    <rtept lat=\"53.24803\" lon=\"-8.52303\"/>\n    <rtept lat=\"53.24812\" lon=\"-8.52307\"/>\n    <rtept lat=\"53.24831\" lon=\"-8.52321\"/>\n    <rtept lat=\"53.24926\" lon=\"-8.52416\"/>\n    <rtept lat=\"53.24966\" lon=\"-8.52451\"/>\n  </rte>\n</gpx>",
       "output":"str",
       "x":370,
       "y":400,
       "wires":[
          [
             "3f2837e4.8163b"
          ]
       ]
    },
    {
       "id":"8747b72f.74dc3",
       "type":"debug",
       "z":"a55b348f.7aa738",
       "name":"",
       "active":true,
       "tosidebar":true,
       "console":false,
       "tostatus":false,
       "complete":"false",
       "x":630,
       "y":540,
       "wires":[
 
       ]
    },
    {
       "id":"c9b2528.abcbbb",
       "type":"comment",
       "z":"a55b348f.7aa738",
       "name":"#1 - Visit https://onthegomap.com to map a simulated course",
       "info":"",
       "x":440,
       "y":240,
       "wires":[
 
       ]
    },
    {
       "id":"1d6c6e51.6a7c9a",
       "type":"comment",
       "z":"a55b348f.7aa738",
       "name":"#2 - Export route to a GPX file",
       "info":"After plotting an interesting route,\nclick on the menu in the upper right corner \nof the https://onthegomap.com/#/create\nSelect \"Export as GPX\"\nSave as a text file\n\nYou might want to open the txt file and inspect\nthe lat / lon geocoordinates.\n\nIf your route is many thousands of waypoint entries,\nyou will fill a very big blockchain transaction\nhistory.  Keep the route to < 500 waypoints",
       "x":340,
       "y":280,
       "wires":[
 
       ]
    },
    {
       "id":"85bf5f39.e5b04",
       "type":"comment",
       "z":"a55b348f.7aa738",
       "name":"#3 - Paste the entire GPX text file into the Template node below",
       "info":"",
       "x":450,
       "y":320,
       "wires":[
 
       ]
    },
    {
       "id":"3f2837e4.8163b",
       "type":"function",
       "z":"a55b348f.7aa738",
       "name":"Extract Route",
       "func":"var waypoints = msg.payload.split(/\\r?\\n/) ;\n// the GPX file will contain many\n//  <rtept lat=\"40.76789\" lon=\"-73.9812\"/>\"\n\ngeocoordinates = waypoints.filter(path => path.match(/rtept/));\nvar route = \"\";\n\n//var lat, lon;\n//var geo = [];\n\nfor( x=0; x< geocoordinates.length; x++ ) {\n    fields = geocoordinates[x].split('\"');\n//    lat = parseFloat(fields[1]);\n//    lon = parseFloat(fields[3]);\n//    geo.push({lat,lon});\n    route = route + fields[1] + \",\"+ fields[3] + \"\\n\";\n}\n//msg.payload = geo;   // Array of geocoords\n\n// Send a big string to the CSV node so that\n// the CSV node splits each geocoord into an individual msg\nmsg.payload = route;\n\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":660,
       "y":400,
       "wires":[
          [
             "1fd7d44d.f7f1bc"
          ]
       ]
    },
    {
       "id":"1fd7d44d.f7f1bc",
       "type":"csv",
       "z":"a55b348f.7aa738",
       "name":"Split Route",
       "sep":",",
       "hdrin":"",
       "hdrout":"",
       "multi":"one",
       "ret":"\\n",
       "temp":"lat,lon",
       "skip":"0",
       "x":170,
       "y":500,
       "wires":[
          [
             "6bfd0e8e.39d0d"
          ]
       ]
    },
    {
       "id":"b1c2e811.5ad6",
       "type":"function",
       "z":"a55b348f.7aa738",
       "name":"Simulate a Blockchain Temperature Transaction",
       "func":"var now = Date.now();\nvar d = new Date(now);\nvar ts = d.getFullYear() + \"-\" + ('0' + (d.getMonth()+1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2)+ \"T\" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()+\"Z\";\n\n\nmsg.payload = { \"AssetID\":\"34304\",\n                \"timestamp\": ts ,\n                \"Temperature\": {\"Celsius\":Math.floor(Math.round(Math.random()*11)+1) },\n                \"gps\": {\"lat\":msg.payload.lat.toString(),\"lon\":msg.payload.lon.toString()}};\n\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":280,
       "y":580,
       "wires":[
          [
             "8747b72f.74dc3",
             "5a1a0eb9.c9be5"
          ]
       ]
    },
    {
       "id":"6bfd0e8e.39d0d",
       "type":"delay",
       "z":"a55b348f.7aa738",
       "name":"",
       "pauseType":"rate",
       "timeout":"1",
       "timeoutUnits":"seconds",
       "rate":"1",
       "nbRateUnits":"5",
       "rateUnits":"second",
       "randomFirst":"1",
       "randomLast":"5",
       "randomUnits":"seconds",
       "drop":false,
       "x":380,
       "y":500,
       "wires":[
          [
             "b1c2e811.5ad6"
          ]
       ]
    },
    {
       "id":"91fcf708.59e3",
       "type":"comment",
       "z":"a55b348f.7aa738",
       "name":"This example is a bike route through New York City Central Park",
       "info":"",
       "x":450,
       "y":360,
       "wires":[
 
       ]
    },
    {
       "id":"6f55498f.47b1d",
       "type":"comment",
       "z":"a55b348f.7aa738",
       "name":"Configure this  link node to the \"Blockchain REST API\" flow tab and \"Build a TemperatureReading Transaction\" link node",
       "info":"",
       "x":520,
       "y":620,
       "wires":[
 
       ]
    },
    {
       "id":"5a1a0eb9.c9be5",
       "type":"link out",
       "z":"a55b348f.7aa738",
       "name":"new",
       "links":[
          "b4e65b6.cae0a28"
       ],
       "x":580,
       "y":580,
       "wires":[
 
       ]
    },
    {
       "id":"b102d35d.e0d35",
       "type":"debug",
       "z":"a55b348f.7aa738",
       "name":"Blockchain Asset response",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":940,
       "y":160,
       "wires":[
 
       ]
    },
    {
       "id":"39faab09.82f63c",
       "type":"debug",
       "z":"a55b348f.7aa738",
       "name":"Add Bicycle Asset",
       "active":true,
       "tosidebar":true,
       "console":false,
       "tostatus":false,
       "complete":"true",
       "x":590,
       "y":120,
       "wires":[
 
       ]
    },
    {
       "id":"370027f1.853be8",
       "type":"http request",
       "z":"a55b348f.7aa738",
       "name":"hyperledger - Create Bicycle Asset",
       "method":"POST",
       "ret":"obj",
       "url":"",
       "tls":"",
       "x":640,
       "y":160,
       "wires":[
          [
             "b102d35d.e0d35"
          ]
       ]
    },
    {
       "id":"880e818f.6c943",
       "type":"comment",
       "z":"a55b348f.7aa738",
       "name":"One Time Setup to create the Blockchain Bicycle Shipment",
       "info":"Remember to edit the Blockchain Model chaincode (logic.js) \nIn the setupDemo() function, insert your Particle Device ID\nas the Shipment ID",
       "x":270,
       "y":100,
       "wires":[
 
       ]
    },
    {
       "id":"666671c8.8a329",
       "type":"inject",
       "z":"a55b348f.7aa738",
       "name":"",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "onceDelay":0.1,
       "x":130,
       "y":160,
       "wires":[
          [
             "26fe0db1.d51b0a"
          ]
       ]
    },
    {
       "id":"26fe0db1.d51b0a",
       "type":"function",
       "z":"a55b348f.7aa738",
       "name":"Create Bicycle Shipment Asset",
       "func":"// A Shipment Blockchain transaction looks like this:\n//      {\n//      \"$class\": \"org.acme.shipping.perishable.Shipment\",\n//      \"shipmentId\": \"34304\",\n//       \"type\": \"MEDICINE\",\n//       \"status\": \"IN_TRANSIT\",\n//       \"unitCount\": 100,\n//       \"contract\": \"resource:org.acme.shipping.perishable.Contract#CON_002\"\n//       }\n\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\nmsg.payload = {\n    \"$class\": \"org.acme.shipping.perishable.Shipment\",\n    \"shipmentId\": \"34304\",\n    \"type\": \"MEDICINE\",\n    \"status\": \"IN_TRANSIT\",\n    \"unitCount\": 100,\n    \"contract\": \"resource:org.acme.shipping.perishable.Contract#CON_002\"\n};\nShipmentMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\"/api/Shipment?data=\"+ShipmentMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\n\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":330,
       "y":160,
       "wires":[
          [
             "370027f1.853be8",
             "39faab09.82f63c"
          ]
       ]
    },
    {
       "id":"a1fc0f64.783ef8",
       "type":"http request",
       "z":"321651a3.d3511e",
       "name":"Send POST request",
       "method":"POST",
       "ret":"txt",
       "url":"https://api.particle.io/v1/devices/{{ParticleElectron}}/SetInterval?access_token={{ParticleAccessToken}}",
       "tls":"",
       "x":830,
       "y":100,
       "wires":[
          [
             "a89370b7.e9e0a8"
          ]
       ]
    },
    {
       "id":"a89370b7.e9e0a8",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"output/debug",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":1030,
       "y":100,
       "wires":[
 
       ]
    },
    {
       "id":"569b1c35.65cb8c",
       "type":"inject",
       "z":"321651a3.d3511e",
       "name":"On",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":110,
       "y":80,
       "wires":[
          [
             "51309971.6d3d7"
          ]
       ]
    },
    {
       "id":"51309971.6d3d7",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Start Reporting (60 Seconds)",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"params=60",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":330,
       "y":80,
       "wires":[
          [
             "d0f2146a.e2f55"
          ]
       ]
    },
    {
       "id":"5e263f75.086aa8",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Stop Reporting (0 seconds)",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"params=0",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":330,
       "y":120,
       "wires":[
          [
             "d0f2146a.e2f55"
          ]
       ]
    },
    {
       "id":"e468f7a4.5e9c3",
       "type":"inject",
       "z":"321651a3.d3511e",
       "name":"Off",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":110,
       "y":120,
       "wires":[
          [
             "5e263f75.086aa8"
          ]
       ]
    },
    {
       "id":"514fd0e1.f66a7",
       "type":"comment",
       "z":"321651a3.d3511e",
       "name":"You can also start Geolocation Reporting from the Particle Console",
       "info":"You can also start Geolocation Reporting from the Particle Console:\nhttps://console.particle.io/devices/<your particle device id>",
       "x":740,
       "y":60,
       "wires":[
 
       ]
    },
    {
       "id":"83e5ce7c.277b78",
       "type":"ui_dropdown",
       "z":"321651a3.d3511e",
       "name":"Select Asset Tracking Device",
       "label":"Select Asset Tracking Device (Particle Electron)",
       "place":"Select a Particle Electron",
       "group":"9db340b3.3331b",
       "order":1,
       "width":0,
       "height":0,
       "passthru":false,
       "options":[
          {
             "label":"",
             "value":"",
             "type":"str"
          }
       ],
       "payload":"",
       "topic":"",
       "x":400,
       "y":180,
       "wires":[
          [
             "bafe190e.6f3e58",
             "1eca0fa5.580e1"
          ]
       ]
    },
    {
       "id":"c0390fc3.b6d9",
       "type":"ui_form",
       "z":"321651a3.d3511e",
       "name":"",
       "label":"Enable this Asset Tracking Device",
       "group":"9db340b3.3331b",
       "order":2,
       "width":"12",
       "height":"8",
       "options":[
          {
             "label":"Start Geolocation Reporting",
             "value":"EnableReporting",
             "type":"switch",
             "required":false
          },
          {
             "label":"Interval (default 60sec)",
             "value":"SetInterval",
             "type":"number",
             "required":false
          }
       ],
       "formValue":{
          "EnableReporting":false,
          "SetInterval":""
       },
       "payload":"",
       "topic":"",
       "x":150,
       "y":280,
       "wires":[
          [
             "e03aa5cd.7f6038"
          ]
       ]
    },
    {
       "id":"7dd19d4c.5a28d4",
       "type":"switch",
       "z":"321651a3.d3511e",
       "name":"Set Reporting Interval",
       "property":"payload.SetInterval",
       "propertyType":"msg",
       "rules":[
          {
             "t":"nnull"
          },
          {
             "t":"else"
          }
       ],
       "checkall":"true",
       "outputs":2,
       "x":660,
       "y":240,
       "wires":[
          [
             "3874d33d.b3f5fc"
          ],
          [
             "41b230d7.59581"
          ]
       ]
    },
    {
       "id":"e03aa5cd.7f6038",
       "type":"switch",
       "z":"321651a3.d3511e",
       "name":"EnableReporting",
       "property":"payload.EnableReporting",
       "propertyType":"msg",
       "rules":[
          {
             "t":"true"
          },
          {
             "t":"false"
          }
       ],
       "checkall":"true",
       "outputs":2,
       "x":420,
       "y":280,
       "wires":[
          [
             "7dd19d4c.5a28d4"
          ],
          [
             "febf7417.5c6868"
          ]
       ]
    },
    {
       "id":"febf7417.5c6868",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Stop Reporting (0 seconds)",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"params=0",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":680,
       "y":320,
       "wires":[
          [
             "8e328547.9719f8"
          ]
       ]
    },
    {
       "id":"41b230d7.59581",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Start Reporting (60 Sec)",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"params=60",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":910,
       "y":260,
       "wires":[
          [
             "8e328547.9719f8"
          ]
       ]
    },
    {
       "id":"3874d33d.b3f5fc",
       "type":"template",
       "z":"321651a3.d3511e",
       "name":"Set Reporting Interval",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"mustache",
       "template":"params={{payload.SetInterval}}",
       "output":"str",
       "x":900,
       "y":220,
       "wires":[
          [
             "8e328547.9719f8"
          ]
       ]
    },
    {
       "id":"1c7920dd.523ef7",
       "type":"switch",
       "z":"321651a3.d3511e",
       "name":"Set Accel Threshold",
       "property":"payload.SetXYZThresh",
       "propertyType":"msg",
       "rules":[
          {
             "t":"nnull"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":430,
       "y":380,
       "wires":[
          [
             "a669bad0.299648"
          ]
       ]
    },
    {
       "id":"8e328547.9719f8",
       "type":"link out",
       "z":"321651a3.d3511e",
       "name":"SetInterval",
       "links":[
          "72ec6b2.f60db94"
       ],
       "x":1075,
       "y":320,
       "wires":[
 
       ]
    },
    {
       "id":"72ec6b2.f60db94",
       "type":"link in",
       "z":"321651a3.d3511e",
       "name":"",
       "links":[
          "8e328547.9719f8"
       ],
       "x":55,
       "y":500,
       "wires":[
          [
             "d333719e.3100f",
             "b0bb7a3b.62b89"
          ]
       ]
    },
    {
       "id":"d333719e.3100f",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":185,
       "y":480,
       "wires":[
 
       ]
    },
    {
       "id":"a7acd57d.923e3",
       "type":"http request",
       "z":"321651a3.d3511e",
       "name":"Send POST request",
       "method":"POST",
       "ret":"txt",
       "url":"https://api.particle.io/v1/devices/{{ParticleDeviceID}}/SetInterval?access_token={{ParticleAccessToken}}",
       "tls":"",
       "x":430,
       "y":520,
       "wires":[
          [
             "73dee9d4.2c0b",
             "ebbf76b8.8b5a2"
          ]
       ]
    },
    {
       "id":"a669bad0.299648",
       "type":"template",
       "z":"321651a3.d3511e",
       "name":"Set Accel Thresh",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"mustache",
       "template":"params={{payload.SetXYZThresh}}",
       "output":"str",
       "x":650,
       "y":380,
       "wires":[
          [
             "39504425.913d5c"
          ]
       ]
    },
    {
       "id":"39504425.913d5c",
       "type":"link out",
       "z":"321651a3.d3511e",
       "name":"SetXYZThresh",
       "links":[
          "fdf8a8e9.8580d8"
       ],
       "x":835,
       "y":380,
       "wires":[
 
       ]
    },
    {
       "id":"fdf8a8e9.8580d8",
       "type":"link in",
       "z":"321651a3.d3511e",
       "name":"",
       "links":[
          "39504425.913d5c"
       ],
       "x":55,
       "y":660,
       "wires":[
          [
             "d816d942.db6eb",
             "a2a41bed.894428"
          ]
       ]
    },
    {
       "id":"bafe190e.6f3e58",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":160,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"48bc06ac.288c88",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":390,
       "y":560,
       "wires":[
 
       ]
    },
    {
       "id":"d816d942.db6eb",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":185,
       "y":640,
       "wires":[
 
       ]
    },
    {
       "id":"699b77e3.e322e8",
       "type":"http request",
       "z":"321651a3.d3511e",
       "name":"Send POST request",
       "method":"POST",
       "ret":"txt",
       "url":"https://api.particle.io/v1/devices/{{ParticleDeviceID}}/SetXYZThresh?access_token={{ParticleAccessToken}}",
       "tls":"",
       "x":430,
       "y":680,
       "wires":[
          [
             "ebbf76b8.8b5a2",
             "73dee9d4.2c0b"
          ]
       ]
    },
    {
       "id":"ebbf76b8.8b5a2",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"output/debug",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":700,
       "y":520,
       "wires":[
 
       ]
    },
    {
       "id":"754330d2.387fc",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":390,
       "y":720,
       "wires":[
 
       ]
    },
    {
       "id":"1f599d21.789793",
       "type":"ui_form",
       "z":"321651a3.d3511e",
       "name":"",
       "label":"Set Accelerometer Threshold",
       "group":"9db340b3.3331b",
       "order":3,
       "width":0,
       "height":0,
       "options":[
          {
             "label":"Set Accelerometer Threshold",
             "value":"SetXYZThresh",
             "type":"number",
             "required":true
          }
       ],
       "formValue":{
          "SetXYZThresh":""
       },
       "payload":"",
       "topic":"",
       "x":140,
       "y":380,
       "wires":[
          [
             "1c7920dd.523ef7"
          ]
       ]
    },
    {
       "id":"77b27a.0dba3d88",
       "type":"switch",
       "z":"321651a3.d3511e",
       "name":"",
       "property":"payload.ok",
       "propertyType":"msg",
       "rules":[
          {
             "t":"false"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":770,
       "y":600,
       "wires":[
          [
             "207babc4.a1e0e4"
          ]
       ]
    },
    {
       "id":"4f1dfe3a.d21608",
       "type":"ui_toast",
       "z":"321651a3.d3511e",
       "position":"top right",
       "displayTime":"10",
       "highlight":"",
       "outputs":0,
       "ok":"OK",
       "cancel":"",
       "topic":"",
       "name":"",
       "x":1060,
       "y":600,
       "wires":[
 
       ]
    },
    {
       "id":"73dee9d4.2c0b",
       "type":"json",
       "z":"321651a3.d3511e",
       "name":"",
       "pretty":false,
       "x":650,
       "y":600,
       "wires":[
          [
             "77b27a.0dba3d88"
          ]
       ]
    },
    {
       "id":"207babc4.a1e0e4",
       "type":"template",
       "z":"321651a3.d3511e",
       "name":"Error Msg",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"mustache",
       "template":"Error contacting device : {{payload.error}}",
       "output":"str",
       "x":900,
       "y":600,
       "wires":[
          [
             "4f1dfe3a.d21608"
          ]
       ]
    },
    {
       "id":"85a7b724.a61f5",
       "type":"inject",
       "z":"321651a3.d3511e",
       "name":"GetCurrTemp",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":110,
       "y":820,
       "wires":[
          [
             "88d56aa4.42c8a8"
          ]
       ]
    },
    {
       "id":"86747b52.e25aa8",
       "type":"http request",
       "z":"321651a3.d3511e",
       "name":"Send POST request",
       "method":"POST",
       "ret":"txt",
       "url":"https://api.particle.io/v1/devices/{{ParticleDeviceID}}/GetCurrTemp?access_token={{ParticleAccessToken}}",
       "tls":"",
       "x":510,
       "y":820,
       "wires":[
          [
             "449de4ff.4c2984",
             "d68f041d.eb2e3"
          ]
       ]
    },
    {
       "id":"7167fdd8.fbb194",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":470,
       "y":860,
       "wires":[
 
       ]
    },
    {
       "id":"449de4ff.4c2984",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"output/debug",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":730,
       "y":800,
       "wires":[
 
       ]
    },
    {
       "id":"3e48a534.c7f8ba",
       "type":"switch",
       "z":"321651a3.d3511e",
       "name":"",
       "property":"payload.return_value",
       "propertyType":"msg",
       "rules":[
          {
             "t":"nnull"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":830,
       "y":840,
       "wires":[
          [
             "50ea4ad7.426064"
          ]
       ]
    },
    {
       "id":"7a11f76b.aca2a8",
       "type":"ui_toast",
       "z":"321651a3.d3511e",
       "position":"dialog",
       "displayTime":"10",
       "highlight":"",
       "outputs":1,
       "ok":"OK",
       "cancel":"",
       "topic":"",
       "name":"",
       "x":1150,
       "y":840,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"d68f041d.eb2e3",
       "type":"json",
       "z":"321651a3.d3511e",
       "name":"",
       "pretty":false,
       "x":710,
       "y":840,
       "wires":[
          [
             "3e48a534.c7f8ba",
             "77b27a.0dba3d88"
          ]
       ]
    },
    {
       "id":"50ea4ad7.426064",
       "type":"template",
       "z":"321651a3.d3511e",
       "name":"Curr Temp Msg",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"mustache",
       "template":"The current temperature is : {{payload.return_value}}",
       "output":"str",
       "x":980,
       "y":840,
       "wires":[
          [
             "7a11f76b.aca2a8"
          ]
       ]
    },
    {
       "id":"887373e7.03472",
       "type":"ui_button",
       "z":"321651a3.d3511e",
       "name":"",
       "group":"77d3d700.42e9e8",
       "order":4,
       "width":0,
       "height":0,
       "passthru":false,
       "label":"Get Current Temperature of Device",
       "color":"",
       "bgcolor":"",
       "icon":"",
       "payload":"",
       "payloadType":"str",
       "topic":"",
       "x":160,
       "y":860,
       "wires":[
          [
             "88d56aa4.42c8a8"
          ]
       ]
    },
    {
       "id":"e1e7fab0.332558",
       "type":"ui_button",
       "z":"321651a3.d3511e",
       "name":"",
       "group":"77d3d700.42e9e8",
       "order":5,
       "width":0,
       "height":0,
       "passthru":false,
       "label":"Get Recent Accelerometer Data",
       "color":"",
       "bgcolor":"",
       "icon":"",
       "payload":"",
       "payloadType":"str",
       "topic":"",
       "x":150,
       "y":1020,
       "wires":[
          [
             "1c49a607.98485a"
          ]
       ]
    },
    {
       "id":"ca39954e.6d5e68",
       "type":"http request",
       "z":"321651a3.d3511e",
       "name":"Send POST request",
       "method":"POST",
       "ret":"txt",
       "url":"https://api.particle.io/v1/devices/{{ParticleDeviceID}}/GetRecentXYZ?access_token={{ParticleAccessToken}}",
       "tls":"",
       "x":510,
       "y":980,
       "wires":[
          [
             "7d9dd1ff.48694",
             "8eb6c3e1.35da5"
          ]
       ]
    },
    {
       "id":"300cda8d.21cad6",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":470,
       "y":1020,
       "wires":[
 
       ]
    },
    {
       "id":"7d9dd1ff.48694",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"output/debug",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":730,
       "y":960,
       "wires":[
 
       ]
    },
    {
       "id":"148d940b.9f1d14",
       "type":"switch",
       "z":"321651a3.d3511e",
       "name":"",
       "property":"payload.return_value",
       "propertyType":"msg",
       "rules":[
          {
             "t":"nnull"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":830,
       "y":1000,
       "wires":[
          [
             "7f21b368.04ccec"
          ]
       ]
    },
    {
       "id":"97eb5af4.e12918",
       "type":"ui_toast",
       "z":"321651a3.d3511e",
       "position":"dialog",
       "displayTime":"10",
       "highlight":"",
       "outputs":1,
       "ok":"OK",
       "cancel":"",
       "topic":"",
       "name":"",
       "x":1150,
       "y":1000,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"8eb6c3e1.35da5",
       "type":"json",
       "z":"321651a3.d3511e",
       "name":"",
       "pretty":false,
       "x":710,
       "y":1000,
       "wires":[
          [
             "148d940b.9f1d14",
             "77b27a.0dba3d88"
          ]
       ]
    },
    {
       "id":"7f21b368.04ccec",
       "type":"template",
       "z":"321651a3.d3511e",
       "name":"Recent XYZ  Msg",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"mustache",
       "template":"Recent Accelerometer data : {{payload.return_value}}",
       "output":"str",
       "x":980,
       "y":1000,
       "wires":[
          [
             "97eb5af4.e12918"
          ]
       ]
    },
    {
       "id":"677e45.c85689bc",
       "type":"inject",
       "z":"321651a3.d3511e",
       "name":"Recent XYZ",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":110,
       "y":980,
       "wires":[
          [
             "1c49a607.98485a"
          ]
       ]
    },
    {
       "id":"ccdf2fa5.6d19d8",
       "type":"particle-SSE",
       "z":"543de17.27c702",
       "devid":"",
       "evtname":"deviceLocator",
       "x":590,
       "y":80,
       "wires":[
          [
             "edd31d36.5a5678"
          ]
       ]
    },
    {
       "id":"edd31d36.5a5678",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"Data Arriving",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":840,
       "y":80,
       "wires":[
 
       ]
    },
    {
       "id":"3223aefd.5fa5c2",
       "type":"particle-SSE",
       "z":"543de17.27c702",
       "devid":"",
       "evtname":"hook-response/deviceLocator/<your Particle Device ID>/0",
       "x":320,
       "y":620,
       "wires":[
          [
             "8b94a546.b3e518",
             "c5da0e81.f6e148"
          ]
       ]
    },
    {
       "id":"8b94a546.b3e518",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"true",
       "x":640,
       "y":640,
       "wires":[
 
       ]
    },
    {
       "id":"c5da0e81.f6e148",
       "type":"function",
       "z":"543de17.27c702",
       "name":"Split GeoLocation string",
       "func":"// Split \"40.9837518,-74.11384330000001,1057\" at the ,\nvar geolocation = msg.payload.split(\",\");\n// Split \"hook-response/deviceLocator/<Particle device ID>/0\"\nvar ParticleID = msg.evtname.split(\"/\");\nParticleID[2]=\"2\"+ParticleID[2];\n// Create a JSON object to store in the database\nmsg.payload = { \"AssetID\": ParticleID[2],\n                \"gps\":{\"lat\":geolocation[0],\"lon\":geolocation[1]},\n                \"uncertaintyradius\":geolocation[2],\n                \"timestamp\" : Date.now()\n};\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":700,
       "y":600,
       "wires":[
          [
             "5522c280.ab3fd4"
          ]
       ]
    },
    {
       "id":"5522c280.ab3fd4",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":920,
       "y":600,
       "wires":[
 
       ]
    },
    {
       "id":"48dbcc9d.0a6eb4",
       "type":"rbe",
       "z":"543de17.27c702",
       "name":"",
       "func":"rbe",
       "gap":"",
       "start":"",
       "inout":"out",
       "x":910,
       "y":260,
       "wires":[
          [
             "7ac6a8bb.adeae"
          ]
       ]
    },
    {
       "id":"321eda62.16a616",
       "type":"comment",
       "z":"543de17.27c702",
       "name":"Particle Board is Active",
       "info":"",
       "x":600,
       "y":40,
       "wires":[
 
       ]
    },
    {
       "id":"b2ca01eb.57402",
       "type":"comment",
       "z":"543de17.27c702",
       "name":"Particle Board received response from Google Location API",
       "info":"",
       "x":710,
       "y":560,
       "wires":[
 
       ]
    },
    {
       "id":"af47e31e.5b0d28",
       "type":"comment",
       "z":"543de17.27c702",
       "name":"Only record location when Particle Board moves",
       "info":"",
       "x":1100,
       "y":180,
       "wires":[
 
       ]
    },
    {
       "id":"66bbaa96.e59fdc",
       "type":"particle-SSE",
       "z":"543de17.27c702",
       "devid":"",
       "evtname":"AssetTrackerTemperatureEvent",
       "x":220,
       "y":440,
       "wires":[
          [
             "e8f3cd2b.aef48",
             "df0eb88e.93e1"
          ]
       ]
    },
    {
       "id":"3cc15de5.0e5522",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"Temperature Reading",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":680,
       "y":460,
       "wires":[
 
       ]
    },
    {
       "id":"e8a0947.1af0068",
       "type":"particle-SSE",
       "z":"543de17.27c702",
       "devid":"",
       "evtname":"AssetTrackerAccelerationEvent",
       "x":230,
       "y":200,
       "wires":[
          [
             "12470214.64ed8e",
             "df0eb88e.93e1"
          ]
       ]
    },
    {
       "id":"c10a1acc.bf4c68",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"Excessive Acceleration Detected",
       "active":false,
       "console":"false",
       "complete":"payload",
       "x":710,
       "y":180,
       "wires":[
 
       ]
    },
    {
       "id":"12470214.64ed8e",
       "type":"json",
       "z":"543de17.27c702",
       "name":"",
       "pretty":false,
       "x":490,
       "y":200,
       "wires":[
          [
             "c10a1acc.bf4c68",
             "22bcc200.9a746e"
          ]
       ]
    },
    {
       "id":"e8f3cd2b.aef48",
       "type":"json",
       "z":"543de17.27c702",
       "name":"",
       "pretty":false,
       "x":490,
       "y":440,
       "wires":[
          [
             "3cc15de5.0e5522",
             "aab9c606.931ff8"
          ]
       ]
    },
    {
       "id":"df0eb88e.93e1",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"true",
       "x":490,
       "y":320,
       "wires":[
 
       ]
    },
    {
       "id":"22bcc200.9a746e",
       "type":"function",
       "z":"543de17.27c702",
       "name":"Format Accel Event Record",
       "func":"// this was a GetRecentXYZ query, no GPS data\nif( typeof msg.payload.gps === 'undefined') {\n    return null ;\n}\n// Create a JSON object to store in the database\nmsg.blockchaindata = { \"AssetID\": msg.id,\n                \"Accel\":msg.payload.Accel,\n                \"gps\":msg.payload.gps,\n                \"timestamp\" : msg.published_at\n};\n// If the asset didn't move, don't write temp data to the blockchain.\nmsg.payload = msg.payload.gps;\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":700,
       "y":220,
       "wires":[
          [
             "d6e358bf.8b69e",
             "48dbcc9d.0a6eb4"
          ]
       ]
    },
    {
       "id":"aab9c606.931ff8",
       "type":"function",
       "z":"543de17.27c702",
       "name":"Format Temp Event Record",
       "func":"// this was a GetCurrTemp query, no GPS data\nif( typeof msg.payload.gps === 'undefined') {\n    return null ;\n}\n\n// Create a JSON object to store in the database\nmsg.blockchaindata = { \"AssetID\": msg.id,\n                \"Temperature\":msg.payload.Temp,\n                \"gps\":msg.payload.gps,\n                \"timestamp\" : msg.published_at\n};\n\n// If the asset didn't move, don't write temp data to the blockchain.\nmsg.payload = msg.payload.gps;\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":700,
       "y":420,
       "wires":[
          [
             "86c76427.e247f8",
             "40259281.64035c"
          ]
       ]
    },
    {
       "id":"86c76427.e247f8",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":930,
       "y":420,
       "wires":[
 
       ]
    },
    {
       "id":"d6e358bf.8b69e",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":930,
       "y":220,
       "wires":[
 
       ]
    },
    {
       "id":"7ac6a8bb.adeae",
       "type":"change",
       "z":"543de17.27c702",
       "name":"Store Record",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"blockchaindata",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":1060,
       "y":260,
       "wires":[
          [
             "43616552.899c3c",
             "525488cd.f8907"
          ]
       ]
    },
    {
       "id":"43616552.899c3c",
       "type":"debug",
       "z":"543de17.27c702",
       "name":"BlockChain Data",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":1250,
       "y":320,
       "wires":[
 
       ]
    },
    {
       "id":"69bb6d3b.603904",
       "type":"comment",
       "z":"543de17.27c702",
       "name":"Example TemperatureReading",
       "info":"{\"AssetID\":\"long string of numbers\",\"Temperature\":{\"Celsius\":24.25,\"Fahrenheit\":75.650002},\"gps\":{\"lat\":40.973312,\"lon\":-74.092712,\"accuracy\":0},\"timestamp\":\"2018-02-14T14:49:08.132Z\"}",
       "x":950,
       "y":460,
       "wires":[
 
       ]
    },
    {
       "id":"cd263e59.11b178",
       "type":"link out",
       "z":"543de17.27c702",
       "name":"AccelReading Arrived",
       "links":[
          "c48ca821.f612e"
       ],
       "x":1355,
       "y":260,
       "wires":[
 
       ]
    },
    {
       "id":"40259281.64035c",
       "type":"rbe",
       "z":"543de17.27c702",
       "name":"",
       "func":"rbe",
       "gap":"",
       "start":"",
       "inout":"out",
       "x":910,
       "y":380,
       "wires":[
          [
             "c6887cea.852a58"
          ]
       ]
    },
    {
       "id":"c6887cea.852a58",
       "type":"change",
       "z":"543de17.27c702",
       "name":"Store Record",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"blockchaindata",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":1060,
       "y":380,
       "wires":[
          [
             "c8629b63.ff028",
             "43616552.899c3c"
          ]
       ]
    },
    {
       "id":"c8629b63.ff028",
       "type":"link out",
       "z":"543de17.27c702",
       "name":"TemperatureReading Arrived",
       "links":[
          "b4e65b6.cae0a28"
       ],
       "x":1195,
       "y":380,
       "wires":[
 
       ]
    },
    {
       "id":"afea99ea.c72ca8",
       "type":"inject",
       "z":"543de17.27c702",
       "name":"Reset RBE GPS Data",
       "topic":"",
       "payload":"{\"lat\":41.972904,\"lon\":-75.092216,\"accuracy\":0}",
       "payloadType":"json",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":780,
       "y":320,
       "wires":[
          [
             "48dbcc9d.0a6eb4",
             "40259281.64035c"
          ]
       ]
    },
    {
       "id":"1700ce68.d07d8a",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"Blockchain Asset response",
       "active":true,
       "console":"false",
       "complete":"true",
       "x":1040,
       "y":100,
       "wires":[
 
       ]
    },
    {
       "id":"5b11db32.56c154",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"Particle Electron Asset Tracker",
       "active":true,
       "console":"false",
       "complete":"payload",
       "x":710,
       "y":60,
       "wires":[
 
       ]
    },
    {
       "id":"a508471.74a83b8",
       "type":"http request",
       "z":"85208c41.97d0e",
       "name":"hyperledger - Create Persishable Demo",
       "method":"POST",
       "ret":"obj",
       "url":"http://{{FabricIP}}:31090/api/SetupDemo",
       "tls":"",
       "x":730,
       "y":100,
       "wires":[
          [
             "1700ce68.d07d8a"
          ]
       ]
    },
    {
       "id":"56ce873b.cba198",
       "type":"comment",
       "z":"85208c41.97d0e",
       "name":"One Time Setup to create the Blockchain Demo",
       "info":"Remember to edit the Blockchain Model chaincode (logic.js) \nIn the setupDemo() function, insert your Particle Device ID\nas the Shipment ID",
       "x":330,
       "y":60,
       "wires":[
 
       ]
    },
    {
       "id":"ff1d99.4f102268",
       "type":"comment",
       "z":"85208c41.97d0e",
       "name":"Create a TemperatureReading Transaction",
       "info":"",
       "x":320,
       "y":220,
       "wires":[
 
       ]
    },
    {
       "id":"9ac2646.1bd4b98",
       "type":"inject",
       "z":"85208c41.97d0e",
       "name":"Sample Temp Data",
       "topic":"",
       "payload":"{\"AssetID\":\"<your Particle Device ID>\",\"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\"timestamp\":\"2018-02-14T15:06:41.178Z\"}",
       "payloadType":"json",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":210,
       "y":300,
       "wires":[
          [
             "54a0c58f.68d064"
          ]
       ]
    },
    {
       "id":"54a0c58f.68d064",
       "type":"function",
       "z":"85208c41.97d0e",
       "name":"Build a TemperatureReading Transaction",
       "func":"// A TemperatureReading Blockchain transaction looks like this:\n//      {\n//      \"$class\": \"org.acme.shipping.perishable.TemperatureReading\",\n//      \"celsius\": 0,\n//      \"latitude\": \"string\",\n//      \"longitude\": \"string\",\n//      \"readingTime\": \"string\",\n//      \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//      }\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerTemperatureEvent which looks like this:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:06:41.178Z\"}\n\nmsg.payload = {\n  \"$class\"     : \"org.acme.shipping.perishable.TemperatureReading\",\n  \"celsius\"    : msg.payload.Temperature.Celsius,\n  \"readingTime\": msg.payload.timestamp,\n  \"latitude\"   : msg.payload.gps.lat.toString(),\n  \"longitude\"  : msg.payload.gps.lon.toString(),\n  \"shipment\"   : \"resource:org.acme.shipping.perishable.Shipment#\"+msg.payload.AssetID\n};\nTempReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":31090/api/TemperatureReading?data=\"+TempReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":500,
       "y":260,
       "wires":[
          [
             "41c55a75.c17804",
             "a99bf915.793b38"
          ]
       ]
    },
    {
       "id":"a99bf915.793b38",
       "type":"http request",
       "z":"85208c41.97d0e",
       "name":"Blockchain POST TemperatureReading",
       "method":"POST",
       "ret":"obj",
       "url":"",
       "tls":"",
       "x":830,
       "y":260,
       "wires":[
          [
             "9163f401.f241c"
          ]
       ]
    },
    {
       "id":"41c55a75.c17804",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":750,
       "y":220,
       "wires":[
 
       ]
    },
    {
       "id":"9163f401.f241c",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1100,
       "y":260,
       "wires":[
 
       ]
    },
    {
       "id":"16bad4d5.de9bdb",
       "type":"comment",
       "z":"85208c41.97d0e",
       "name":"Create a AccelReading Transaction",
       "info":"",
       "x":300,
       "y":500,
       "wires":[
 
       ]
    },
    {
       "id":"857abbfb.528c28",
       "type":"inject",
       "z":"85208c41.97d0e",
       "name":"Sample Accel Data",
       "topic":"",
       "payload":"{\"AssetID\":\"<your Particle Device ID>\",\"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\"timestamp\":\"2018-02-14T15:16:44.284Z\"}",
       "payloadType":"json",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":210,
       "y":580,
       "wires":[
          [
             "120325f9.462522"
          ]
       ]
    },
    {
       "id":"120325f9.462522",
       "type":"function",
       "z":"85208c41.97d0e",
       "name":"Build a AccelReading Transaction",
       "func":"// An AccelReading Blockchain transaction looks like this:\n//   {\n//   \"$class\": \"org.acme.shipping.perishable.AccelReading\",\n//   \"accel_x\": 0,\n//   \"accel_y\": 0,\n//   \"accel_z\": 0,\n//   \"latitude\": \"string\",\n//   \"longitude\": \"string\",\n//   \"readingTime\": \"string\",\n//   \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//   }\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerAccelerationEvent which looks like this:\n// Example:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:16:44.284Z\"}\n\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\nmsg.payload = {\n    \"$class\"     : \"org.acme.shipping.perishable.AccelReading\",\n    \"accel_x\"    : msg.payload.Accel.x,\n    \"accel_y\"    : msg.payload.Accel.y,\n    \"accel_z\"    : msg.payload.Accel.z,\n    \"readingTime\": msg.payload.timestamp,\n    \"latitude\"   : msg.payload.gps.lat.toString(),\n    \"longitude\"  : msg.payload.gps.lon.toString(),\n    \"shipment\"   : \"resource:org.acme.shipping.perishable.Shipment#\"+msg.payload.AssetID\n};\nAccelReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":31090/api/AccelReading?data=\"+AccelReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":480,
       "y":540,
       "wires":[
          [
             "88f0f226.7e6bf8",
             "88ebe280.d2795"
          ]
       ]
    },
    {
       "id":"88ebe280.d2795",
       "type":"http request",
       "z":"85208c41.97d0e",
       "name":"Blockchain POST AccelReading",
       "method":"POST",
       "ret":"obj",
       "url":"",
       "tls":"",
       "x":810,
       "y":540,
       "wires":[
          [
             "c0c27fc6.a3632"
          ]
       ]
    },
    {
       "id":"88f0f226.7e6bf8",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":750,
       "y":500,
       "wires":[
 
       ]
    },
    {
       "id":"c0c27fc6.a3632",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1100,
       "y":540,
       "wires":[
 
       ]
    },
    {
       "id":"29fe56a2.93b42a",
       "type":"comment",
       "z":"85208c41.97d0e",
       "name":"Create a GpsReading Transaction - Not used",
       "info":"",
       "x":330,
       "y":780,
       "wires":[
 
       ]
    },
    {
       "id":"45360acd.49e304",
       "type":"inject",
       "z":"85208c41.97d0e",
       "name":"Sample GPS Data",
       "topic":"",
       "payload":"{\"AssetID\":\"<your Particle Device ID>\",\"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\"timestamp\":\"2018-02-14T15:06:41.178Z\"}",
       "payloadType":"json",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":220,
       "y":860,
       "wires":[
          [
             "722a63dc.d4862c"
          ]
       ]
    },
    {
       "id":"722a63dc.d4862c",
       "type":"function",
       "z":"85208c41.97d0e",
       "name":"Build a GpsReading Transaction",
       "func":"// A GpsReading transaction looks like this:\n//   {\n//   \"$class\": \"org.acme.shipping.perishable.GpsReading\",\n//   \"readingTime\": \"\",\n//   \"readingDate\": \"\",\n//   \"latitude\": \"\",\n//   \"latitudeDir\": \"N\",\n//   \"longitude\": \"\",\n//   \"longitudeDir\": \"N\",\n//   \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//    }\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerTemperatureEvent or AssetTrackerAccelerationEvent\n// The msg.payload will look like this:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:06:41.178Z\"}\n//\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:16:44.284Z\"}\n\n// Not certain why the Perishable Model splits the readingTime and readingDate. \n// That's useless, just store the timestamp (which is preserved in readingTime)\n// The model validation won't allow a blank readingDate so construct the properly formatted date here\nvar msec = Date.parse(msg.payload.timestamp);\nvar d = new Date(msec);\nvar ReadingDate = d.getFullYear() + \"-\" + ('0' + (d.getMonth()+1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2);\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\nmsg.payload = {\n  \"$class\": \"org.acme.shipping.perishable.GpsReading\",\n  \"readingTime\": msg.payload.timestamp,\n  \"readingDate\": ReadingDate,\n  \"latitude\": msg.payload.gps.lat.toString(),\n  \"latitudeDir\": \"N\",\n  \"longitude\": msg.payload.gps.lon.toString(),\n  \"longitudeDir\": \"N\",\n  \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#\"+msg.payload.AssetID\n};\nGpsReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":31090/api/GpsReading?data=\"+GpsReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":470,
       "y":820,
       "wires":[
          [
             "21bc5210.1ec2a6",
             "84cb432c.37cfd"
          ]
       ]
    },
    {
       "id":"84cb432c.37cfd",
       "type":"http request",
       "z":"85208c41.97d0e",
       "name":"Blockchain POST GpsReading",
       "method":"POST",
       "ret":"obj",
       "url":"",
       "tls":"",
       "x":810,
       "y":820,
       "wires":[
          [
             "47c72606.04d5a8"
          ]
       ]
    },
    {
       "id":"21bc5210.1ec2a6",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":750,
       "y":780,
       "wires":[
 
       ]
    },
    {
       "id":"47c72606.04d5a8",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1100,
       "y":820,
       "wires":[
 
       ]
    },
    {
       "id":"b4e65b6.cae0a28",
       "type":"link in",
       "z":"85208c41.97d0e",
       "name":"New TempeatureReading",
       "links":[
          "328eae91.ddbdca",
          "b15c717d.75c89",
          "724c42c6.6475d4",
          "c8629b63.ff028",
          "57699e62.9a2bd8",
          "5a1a0eb9.c9be5"
       ],
       "x":175,
       "y":260,
       "wires":[
          [
             "54a0c58f.68d064"
          ]
       ]
    },
    {
       "id":"c48ca821.f612e",
       "type":"link in",
       "z":"85208c41.97d0e",
       "name":"New AccelReading",
       "links":[
          "eb81c490.807ae8",
          "5c47d0e0.70889",
          "67e5758e.cc2024",
          "cd263e59.11b178",
          "873040ce.e27398"
       ],
       "x":175,
       "y":540,
       "wires":[
          [
             "120325f9.462522"
          ]
       ]
    },
    {
       "id":"8f6b6eb6.792a8",
       "type":"link in",
       "z":"85208c41.97d0e",
       "name":"New GPS Reading",
       "links":[
          "6547d49d.d5662c",
          "ae371ce3.1d6f18"
       ],
       "x":175,
       "y":820,
       "wires":[
          [
             "722a63dc.d4862c"
          ]
       ]
    },
    {
       "id":"da25a7db.de0248",
       "type":"comment",
       "z":"85208c41.97d0e",
       "name":"Query the list of TemperatureReading Transactions",
       "info":"",
       "x":340,
       "y":340,
       "wires":[
 
       ]
    },
    {
       "id":"ad72d6dd.11676",
       "type":"inject",
       "z":"85208c41.97d0e",
       "name":"Query Temp Transactions",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":190,
       "y":420,
       "wires":[
          [
             "ff85eb48.05ebe8"
          ]
       ]
    },
    {
       "id":"233b0e58.285bca",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1100,
       "y":380,
       "wires":[
 
       ]
    },
    {
       "id":"4669f1fb.9758e8",
       "type":"comment",
       "z":"85208c41.97d0e",
       "name":"Query the list of AccelReading Transactions",
       "info":"",
       "x":320,
       "y":620,
       "wires":[
 
       ]
    },
    {
       "id":"58ef58e1.5ba53",
       "type":"inject",
       "z":"85208c41.97d0e",
       "name":"Query Accel Transactions",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":190,
       "y":700,
       "wires":[
          [
             "8ba8715a.af4418"
          ]
       ]
    },
    {
       "id":"15d666ff.0366e1",
       "type":"debug",
       "z":"85208c41.97d0e",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1100,
       "y":660,
       "wires":[
 
       ]
    },
    {
       "id":"2e36858e.b96c02",
       "type":"link in",
       "z":"85208c41.97d0e",
       "name":"Query Blockchain Temp Transactions",
       "links":[
          "2fd969a1.7b1516"
       ],
       "x":175,
       "y":380,
       "wires":[
          [
             "ff85eb48.05ebe8"
          ]
       ]
    },
    {
       "id":"9a58eeca.8bdd88",
       "type":"link out",
       "z":"85208c41.97d0e",
       "name":"Return Blockchain Transactions",
       "links":[
          "b6d918be.ae353"
       ],
       "x":1185,
       "y":420,
       "wires":[
 
       ]
    },
    {
       "id":"358d7008.6199b",
       "type":"link in",
       "z":"85208c41.97d0e",
       "name":"Query Blockchain Accel Transactions",
       "links":[
          "f995dcaa.13004"
       ],
       "x":175,
       "y":660,
       "wires":[
          [
             "8ba8715a.af4418"
          ]
       ]
    },
    {
       "id":"c116fb50.7e10c",
       "type":"function",
       "z":"85208c41.97d0e",
       "name":"Refactor",
       "func":"// We want the table to contain this info:\n//  { \"AssetID\":\"<Particle Device ID>\",\n//    \"gps\":{\"lat\":\"40.7307068\",\"lon\":\"-74.00583569999999\"},\n//    \"timestamp\":1518116923270,\n//    \"temperature\":4}\n//\n\n// The Blockchain has this info\n// {\"$class\":\"org.acme.shipping.perishable.AccelReading\",\n//  \"Accel_x\":-560,\"accel_y\":2128,\"accel_z\":14496,\n//  \"celsius\": 22.625\n//  \"latitude\":\"40.983727\",\"longitude\":\"-74.113869\",\n//  \"readingTime\":\"2018-02-14T22:45:45.930Z\",\n//  \"shipment\":\"resource:org.acme.shipping.perishable.Shipment#<Particle Device ID>\",\n//  \"transactionId\":\"5266128649153dd04cc6b5a2e9cd7e2c9f04cae3c746c2de4bee8a4ad36f6aad\",\n//  \"timestamp\":\"2018-02-14T22:45:45.970Z\"}\n\n// Refactor the Blockchain data into a Array\nvar TrackerArray = [];\nvar transaction = {};\nvar AssetID;\nfor(i=0 ; i < msg.payload.length ;i++) {\n    var msec = Date.parse(msg.payload[i].readingTime);\n    AssetID = msg.payload[i].shipment.split(\"#\");\n    transaction = { \"AssetID\":AssetID[1],\n                    \"gps\":{\"lat\":msg.payload[i].latitude,\"lon\":msg.payload[i].longitude},\n                    \"timestamp\"  :msec,\n                    \"temperature\":msg.payload[i].celsius\n    };\n    TrackerArray.push(transaction);\n}\nmsg.payload = TrackerArray;\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":1090,
       "y":420,
       "wires":[
          [
             "9a58eeca.8bdd88"
          ]
       ]
    },
    {
       "id":"8ce7d3b8.e293f",
       "type":"inject",
       "z":"311fef0c.4f3fa",
       "name":"Reset Database load",
       "topic":"",
       "payload":"",
       "payloadType":"date",
       "repeat":"",
       "crontab":"",
       "once":true,
       "x":140,
       "y":60,
       "wires":[
          [
             "34220dd8.7a2662"
          ]
       ]
    },
    {
       "id":"34220dd8.7a2662",
       "type":"change",
       "z":"311fef0c.4f3fa",
       "name":"Set Global Vars",
       "rules":[
          {
             "t":"set",
             "p":"db-loaded",
             "pt":"global",
             "to":"false",
             "tot":"bool"
          },
          {
             "t":"set",
             "p":"BlockchainLoaded",
             "pt":"flow",
             "to":"false",
             "tot":"bool"
          },
          {
             "t":"set",
             "p":"HyperLedgerFabricIP",
             "pt":"global",
             "to":"<your Hyperledger Fabric Public IP>",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":380,
       "y":80,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"f1a03c32.6aed18",
       "type":"comment",
       "z":"311fef0c.4f3fa",
       "name":"Re-Read the Asset Database into Tracking Array",
       "info":"",
       "x":460,
       "y":40,
       "wires":[
 
       ]
    },
    {
       "id":"95c75e05.2c4668",
       "type":"debug",
       "z":"311fef0c.4f3fa",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":790,
       "y":600,
       "wires":[
 
       ]
    },
    {
       "id":"d99d75c0.baea08",
       "type":"change",
       "z":"311fef0c.4f3fa",
       "name":"Save DB",
       "rules":[
          {
             "t":"set",
             "p":"AssetHistory",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          },
          {
             "t":"set",
             "p":"db-loaded",
             "pt":"global",
             "to":"true",
             "tot":"bool"
          },
          {
             "t":"set",
             "p":"BlockchainLoaded",
             "pt":"flow",
             "to":"true",
             "tot":"bool"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":620,
       "y":600,
       "wires":[
          [
             "95c75e05.2c4668"
          ]
       ]
    },
    {
       "id":"47d78f7e.03d968",
       "type":"link in",
       "z":"311fef0c.4f3fa",
       "name":"Load Tables from Blockchain",
       "links":[
          "318a7a4d.b952de",
          "a9e0892b.2e256"
       ],
       "x":115,
       "y":160,
       "wires":[
          [
             "12b00d93.447a32"
          ]
       ]
    },
    {
       "id":"8d434137.95bc2",
       "type":"comment",
       "z":"311fef0c.4f3fa",
       "name":"Read the Blockchain Temperature / GPS transactions into a array",
       "info":"",
       "x":260,
       "y":220,
       "wires":[
 
       ]
    },
    {
       "id":"801d1268.b9fdc8",
       "type":"comment",
       "z":"311fef0c.4f3fa",
       "name":"Read the Blockchain Acceleration / GPS transactions into a array",
       "info":"",
       "x":250,
       "y":460,
       "wires":[
 
       ]
    },
    {
       "id":"5a584113.f4557",
       "type":"function",
       "z":"311fef0c.4f3fa",
       "name":"Merge Asset Tracker Environmental Data",
       "func":"// Here we concantentate the temperature \n// and accelerometer environmental data \n// into a single array for map display purposes. \n\n// Potentially some overlap on GPS coordinates\n// if the Particle Electron Asset Tracker triggered\n// both events simultaneously.\n// At worst, the Dashboard map won't move for one sec.\n\nvar TemperatureAccelArray = flow.get(\"TemperatureData\");\n\n// There is likely to be fewer Accelerometer events (now loaded in msg.payload)\n// Let's merge msg.payload into TemperatureArray\n// There is a timestamp sort function later in the flow so \n// the array order doesn't really matter\nfor( i=0; i < msg.payload.length; i++ ) {\n\n    // We want the table to contain this info:\n    //  { \"AssetID\":\"<Particle Device ID>\",\n    //    \"gps\":{\"lat\":\"40.7307068\",\"lon\":\"-74.00583569999999\"},\n    //    \"timestamp\":1518116923270,\n    //    \"accel\":{\"acc_x\":4000,\"acc_y\":5000,\"acc_z\":6000}}\n    //\n    \n    // The Blockchain AccelReading transaction list has this info\n    // {\"$class\":\"org.acme.shipping.perishable.AccelReading\",\n    //  \"accel_x\":-560,\"accel_y\":2128,\"accel_z\":14496,\n    //  \"celsius\": 22.625\n    //  \"latitude\":\"40.983727\",\"longitude\":\"-74.113869\",\n    //  \"readingTime\":\"2018-02-14T22:45:45.930Z\",\n    //  \"shipment\":\"resource:org.acme.shipping.perishable.Shipment#<Particle Device ID>\",\n    //  \"transactionId\":\"5266128649153dd04cc6b5a2e9cd7e2c9f04cae3c746c2de4bee8a4ad36f6aad\",\n    //  \"timestamp\":\"2018-02-14T22:45:45.970Z\"}\n\n    // Refactor / Add the Blockchain AccelReading data into the Temperature Array\n    var transaction = {};\n    var AssetID;\n    var msec = Date.parse(msg.payload[i].readingTime);\n    AssetID = msg.payload[i].shipment.split(\"#\");\n    transaction = { \"AssetID\":AssetID[1],\n                    \"gps\":{\"lat\":msg.payload[i].latitude,\"lon\":msg.payload[i].longitude},\n                    \"timestamp\"  :msec,\n                    \"accel\":{\"acc_x\":msg.payload[i].accel_x,\"acc_y\":msg.payload[i].accel_y,\"acc_z\":msg.payload[i].accel_z}\n    };\n    TemperatureAccelArray.push(transaction);\n}\n\nmsg.payload = TemperatureAccelArray;\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":360,
       "y":600,
       "wires":[
          [
             "d99d75c0.baea08"
          ]
       ]
    },
    {
       "id":"b2b71c27.e9d9e8",
       "type":"inject",
       "z":"311fef0c.4f3fa",
       "name":"Query Temp Transactions",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":150,
       "y":260,
       "wires":[
          [
             "9a9e6f23.fffbb8"
          ]
       ]
    },
    {
       "id":"ccfe4ac7.89b06",
       "type":"http request",
       "z":"311fef0c.4f3fa",
       "name":"Blockchain GET TemperatureReading",
       "method":"GET",
       "ret":"obj",
       "url":"http://{{FabricIP}}:31090/api/TemperatureReading",
       "tls":"",
       "x":690,
       "y":260,
       "wires":[
          [
             "c1e58c4e.a64bf8",
             "30715743.d48868"
          ]
       ]
    },
    {
       "id":"30715743.d48868",
       "type":"function",
       "z":"311fef0c.4f3fa",
       "name":"Store Blockchain data into a new array",
       "func":"// We want the table to contain this info:\n//  { \"AssetID\":\"<Particle Device ID>\",\n//    \"gps\":{\"lat\":\"40.7307068\",\"lon\":\"-74.00583569999999\"},\n//    \"timestamp\":1518116923270,\n//    \"temperature\":4}\n//\n\n// The Blockchain has this info\n// {\"$class\":\"org.acme.shipping.perishable.AccelReading\",\n//  \"Accel_x\":-560,\"accel_y\":2128,\"accel_z\":14496,\n//  \"celsius\": 22.625\n//  \"latitude\":\"40.983727\",\"longitude\":\"-74.113869\",\n//  \"readingTime\":\"2018-02-14T22:45:45.930Z\",\n//  \"shipment\":\"resource:org.acme.shipping.perishable.Shipment#<particle Device ID>\",\n//  \"transactionId\":\"5266128649153dd04cc6b5a2e9cd7e2c9f04cae3c746c2de4bee8a4ad36f6aad\",\n//  \"timestamp\":\"2018-02-14T22:45:45.970Z\"}\n\n// Refactor the Blockchain data into a new array\nvar TrackerArray = [];\nvar transaction = {};\nvar AssetID;\nfor(i=0 ; i < msg.payload.length ;i++) {\n    var msec = Date.parse(msg.payload[i].readingTime);\n    AssetID = msg.payload[i].shipment.split(\"#\");\n    transaction = { \"AssetID\":AssetID[1],\n                    \"gps\":{\"lat\":msg.payload[i].latitude,\"lon\":msg.payload[i].longitude},\n                    \"timestamp\"  :msec,\n                    \"temperature\":msg.payload[i].celsius\n    };\n    TrackerArray.push(transaction);\n}\nflow.set(\"TemperatureData\", TrackerArray);\n\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":285,
       "y":375,
       "wires":[
          [
             "eb28048c.b942c"
          ]
       ]
    },
    {
       "id":"c1e58c4e.a64bf8",
       "type":"debug",
       "z":"311fef0c.4f3fa",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":970,
       "y":260,
       "wires":[
 
       ]
    },
    {
       "id":"6c1d2e39.418c18",
       "type":"inject",
       "z":"311fef0c.4f3fa",
       "name":"Query Accel Transactions",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "x":150,
       "y":500,
       "wires":[
          [
             "eb28048c.b942c"
          ]
       ]
    },
    {
       "id":"a445b058.c14848",
       "type":"http request",
       "z":"311fef0c.4f3fa",
       "name":"Blockchain GET AccelReading",
       "method":"GET",
       "ret":"obj",
       "url":"http://{{FabricIP}}:31090/api/AccelReading",
       "tls":"",
       "x":670,
       "y":500,
       "wires":[
          [
             "d62d0ed9.ae433",
             "5a584113.f4557",
             "9537bc53.fef7a"
          ]
       ]
    },
    {
       "id":"d62d0ed9.ae433",
       "type":"debug",
       "z":"311fef0c.4f3fa",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":970,
       "y":500,
       "wires":[
 
       ]
    },
    {
       "id":"5adba7b6.2c7638",
       "type":"change",
       "z":"311fef0c.4f3fa",
       "name":"Pause while loading BlockChain Transactions",
       "rules":[
          {
             "t":"set",
             "p":"BlockchainLoaded",
             "pt":"flow",
             "to":"true",
             "tot":"bool"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":590,
       "y":160,
       "wires":[
          [
             "9a9e6f23.fffbb8"
          ]
       ]
    },
    {
       "id":"12b00d93.447a32",
       "type":"switch",
       "z":"311fef0c.4f3fa",
       "name":"BlockChain Loaded yet?",
       "property":"BlockchainLoaded",
       "propertyType":"flow",
       "rules":[
          {
             "t":"false"
          }
       ],
       "checkall":"true",
       "repair":false,
       "outputs":1,
       "x":280,
       "y":160,
       "wires":[
          [
             "5adba7b6.2c7638"
          ]
       ]
    },
    {
       "id":"9537bc53.fef7a",
       "type":"change",
       "z":"311fef0c.4f3fa",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"vibrations",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":990,
       "y":460,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"2e617030.abd7b8",
       "type":"ui_template",
       "z":"7d4f4176.f904a",
       "group":"58945d88.73158c",
       "name":"Embedded Map",
       "order":0,
       "width":"10",
       "height":"10",
       "format":"<div ng-bind-html=\"msg.payload | trusted\"></div>",
       "storeOutMessages":true,
       "fwdInMessages":true,
       "templateScope":"local",
       "x":820,
       "y":120,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"873aa4c8.4156b8",
       "type":"template",
       "z":"7d4f4176.f904a",
       "name":"Add Map to Dashboard",
       "field":"payload",
       "fieldType":"msg",
       "format":"handlebars",
       "syntax":"mustache",
       "template":"<iframe src={{{payload}}} height=515px width=490px></iframe>",
       "x":570,
       "y":120,
       "wires":[
          [
             "2e617030.abd7b8"
          ]
       ]
    },
    {
       "id":"316d9498.25b67c",
       "type":"ui_dropdown",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"Select Truck Route",
       "place":"",
       "group":"f46724b9.82829",
       "order":1,
       "width":0,
       "height":0,
       "passthru":false,
       "options":[
          {
             "label":"",
             "value":"",
             "type":"str"
          }
       ],
       "payload":"",
       "topic":"",
       "x":330,
       "y":280,
       "wires":[
          [
             "d48eeacd.90f35"
          ]
       ]
    },
    {
       "id":"8050d95.c058028",
       "type":"ui_switch",
       "z":"7d4f4176.f904a",
       "name":"Play Particle Electron Route",
       "label":"Track Truck Route",
       "group":"f46724b9.82829",
       "order":5,
       "width":0,
       "height":0,
       "passthru":true,
       "decouple":"false",
       "topic":"",
       "style":"",
       "onvalue":"true",
       "onvalueType":"bool",
       "onicon":"",
       "oncolor":"",
       "offvalue":"false",
       "offvalueType":"bool",
       "officon":"",
       "offcolor":"",
       "x":360,
       "y":482,
       "wires":[
          [
             "9c35fb87.d587"
          ]
       ]
    },
    {
       "id":"9c35fb87.d587",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"Enable / Disable Tracking Map",
       "rules":[
          {
             "t":"set",
             "p":"start-stop",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":482,
       "wires":[
          [
             "d0b2b744.f72e7"
          ]
       ]
    },
    {
       "id":"d0b2b744.f72e7",
       "type":"debug",
       "z":"7d4f4176.f904a",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":910,
       "y":482,
       "wires":[
 
       ]
    },
    {
       "id":"efe0eebb.07f268",
       "type":"comment",
       "z":"7d4f4176.f904a",
       "name":"One time - Add Map to Dashboard",
       "info":"",
       "x":190,
       "y":82,
       "wires":[
 
       ]
    },
    {
       "id":"7d30874f.47f3a",
       "type":"comment",
       "z":"7d4f4176.f904a",
       "name":"Select Asset and Date Range",
       "info":"",
       "x":460,
       "y":320,
       "wires":[
 
       ]
    },
    {
       "id":"32f1f1fb.898fc6",
       "type":"comment",
       "z":"7d4f4176.f904a",
       "name":"Play Asset Route",
       "info":"",
       "x":100,
       "y":482,
       "wires":[
 
       ]
    },
    {
       "id":"eb6fd976.ec9db",
       "type":"inject",
       "z":"7d4f4176.f904a",
       "name":"Init Dashboard",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":true,
       "x":120,
       "y":120,
       "wires":[
          [
             "b6fb654f.982488",
             "6224b123.c5ae2",
             "c036f841.da4808",
             "c7270785.b51a7"
          ]
       ]
    },
    {
       "id":"b6fb654f.982488",
       "type":"function",
       "z":"7d4f4176.f904a",
       "name":"Asset IDs to be Tracked",
       "func":"msg.options = [ {\"Truck #1\":\"34301\"},\n                {\"Truck #2\":\"34302\"},\n                {\"Truck #3\":\"34303\"},\n                {\"Bicycle #1\":\"34304\"},\n                {\"Car #1\": global.get(\"ParticleDeviceID\") }\n              ];\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":350,
       "y":220,
       "wires":[
          [
             "316d9498.25b67c"
          ]
       ]
    },
    {
       "id":"8f666bed.38bed",
       "type":"ui_date_picker",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"Start Date",
       "group":"f46724b9.82829",
       "order":2,
       "width":0,
       "height":0,
       "passthru":true,
       "topic":"",
       "x":460,
       "y":360,
       "wires":[
          [
             "336d77b4.c84eb"
          ]
       ]
    },
    {
       "id":"8fc17af1.979878",
       "type":"ui_date_picker",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"End Date",
       "group":"f46724b9.82829",
       "order":3,
       "width":0,
       "height":0,
       "passthru":true,
       "topic":"",
       "x":460,
       "y":400,
       "wires":[
          [
             "206c7c38.ce53dc"
          ]
       ]
    },
    {
       "id":"9bc8bec.902e74",
       "type":"comment",
       "z":"7d4f4176.f904a",
       "name":"Select Date Range",
       "info":"",
       "x":110,
       "y":422,
       "wires":[
 
       ]
    },
    {
       "id":"f23c082d.dd7728",
       "type":"ui_text",
       "z":"7d4f4176.f904a",
       "group":"f46724b9.82829",
       "order":4,
       "width":0,
       "height":0,
       "name":"Blank text",
       "label":"",
       "format":"",
       "layout":"row-spread",
       "x":300,
       "y":442,
       "wires":[
 
       ]
    },
    {
       "id":"d48eeacd.90f35",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"KitNum",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":590,
       "y":280,
       "wires":[
          [
             "cc8ddd3c.3de3b",
             "71bc2b5a.0a89bc"
          ]
       ]
    },
    {
       "id":"160cb305.ecec7d",
       "type":"debug",
       "z":"7d4f4176.f904a",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":1010,
       "y":280,
       "wires":[
 
       ]
    },
    {
       "id":"1f02733f.dc1685",
       "type":"debug",
       "z":"7d4f4176.f904a",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":850,
       "y":360,
       "wires":[
 
       ]
    },
    {
       "id":"878df2cd.9dddc8",
       "type":"debug",
       "z":"7d4f4176.f904a",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":850,
       "y":400,
       "wires":[
 
       ]
    },
    {
       "id":"cc8ddd3c.3de3b",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"Reset Location",
       "rules":[
          {
             "t":"set",
             "p":"location",
             "pt":"global",
             "to":"0",
             "tot":"num"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":820,
       "y":280,
       "wires":[
          [
             "160cb305.ecec7d"
          ]
       ]
    },
    {
       "id":"e79552ed.f890b8",
       "type":"ui_switch",
       "z":"7d4f4176.f904a",
       "name":"Where is Asset Now",
       "label":"Where is Asset Now",
       "group":"f46724b9.82829",
       "order":6,
       "width":0,
       "height":0,
       "passthru":false,
       "decouple":"false",
       "topic":"",
       "style":"",
       "onvalue":"true",
       "onvalueType":"bool",
       "onicon":"",
       "oncolor":"",
       "offvalue":"false",
       "offvalueType":"bool",
       "officon":"",
       "offcolor":"",
       "x":330,
       "y":560,
       "wires":[
          [
             "bc63a23a.bb8fb8"
          ]
       ]
    },
    {
       "id":"bc63a23a.bb8fb8",
       "type":"function",
       "z":"7d4f4176.f904a",
       "name":"Find it now!",
       "func":"if ( msg.payload === true ) {\n    msg.payload = false;\n    global.set(\"zoom\",true);\n    global.set(\"ZoomedAlready\", false);\n    return msg;\n} else {\n    global.set(\"zoom\",false);   \n}",
       "outputs":1,
       "noerr":0,
       "x":520,
       "y":560,
       "wires":[
          [
             "8050d95.c058028",
             "954a2d08.142de8"
          ]
       ]
    },
    {
       "id":"6224b123.c5ae2",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"Start Date",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"1451624400000",
             "tot":"num"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":300,
       "y":360,
       "wires":[
          [
             "8f666bed.38bed"
          ]
       ]
    },
    {
       "id":"c036f841.da4808",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"End Date",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"1546300799000",
             "tot":"num"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":300,
       "y":400,
       "wires":[
          [
             "8fc17af1.979878"
          ]
       ]
    },
    {
       "id":"c7270785.b51a7",
       "type":"function",
       "z":"7d4f4176.f904a",
       "name":"Inject /worldmap",
       "func":"msg.payload = \"/worldmap\";\nmsg.payload.command = {};\n\nvar u = 'http://{s}.tile.openstreetmap.org/hot/{z}/{x}/{y}.png';\nvar o = JSON.stringify({ maxZoom: 19, attribution: '&copy; OpenStreetMap'});\n\nmsg.payload.command =   {\n                        layer:\"Esri\",\n                        // Moscone Center\n//                        lat:37.7841772,\n//                        lon-122.403751\n                        // Puerto Rico\n                        lat:18.44081,\n                        lon:-66.08068,                        \n                        zoom:10,\n                        // map: {name:\"OSMhot\", url:u, opt:o},\n                        map: {name:\"Esri\", url:u, opt:o},\n                        };\nreturn msg;\n",
       "outputs":1,
       "noerr":0,
       "x":320,
       "y":120,
       "wires":[
          [
             "873aa4c8.4156b8"
          ]
       ]
    },
    {
       "id":"336d77b4.c84eb",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"Start Time Range",
       "rules":[
          {
             "t":"set",
             "p":"start-time",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":650,
       "y":360,
       "wires":[
          [
             "1f02733f.dc1685"
          ]
       ]
    },
    {
       "id":"206c7c38.ce53dc",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"End Time Range",
       "rules":[
          {
             "t":"set",
             "p":"end-time",
             "pt":"global",
             "to":"payload",
             "tot":"msg"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":640,
       "y":400,
       "wires":[
          [
             "878df2cd.9dddc8"
          ]
       ]
    },
    {
       "id":"954a2d08.142de8",
       "type":"debug",
       "z":"7d4f4176.f904a",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":780,
       "y":560,
       "wires":[
 
       ]
    },
    {
       "id":"71bc2b5a.0a89bc",
       "type":"function",
       "z":"7d4f4176.f904a",
       "name":"Build Table",
       "func":"var WhichKit=global.get(\"KitNum\");\n// Make certain that an Asset Kit has been selected from the drop down\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\nvar AssetTagLocations = [];\nvar starttime = global.get(\"start-time\");\nvar endtime = global.get(\"end-time\");\n\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        // Filter on the selected timestamp range\n        if( (AssetHistory[i].timestamp > starttime) && (AssetHistory[i].timestamp < endtime)) {\n            AssetTagLocations.push(AssetHistory[i]); \n        }\n    }\n}\n\n// Sort by timestamp\nAssetTagLocations.sort(function(x,y) {\n    return x.timestamp - y.timestamp;\n});\n\nvar current_location = global.get(\"location\")||0;\nmsg.payload=current_location;\n// Shorten the Device Asset string.\n// In the DB its a very long Particle Device ID\n// Call the last 5 as unique\nvar Device = WhichKit.substr(WhichKit.length - 5);\n\nmsg.template=\"<style>\";\nmsg.template=msg.template+\"#asset table { width: 560px; margin-top: 10px; }\";\nmsg.template=msg.template+\"#asset tr:nth-child(even){background-color: #f2f2f2;}\";\nmsg.template=msg.template+\"#asset th, #asset td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; width: 10%;}\";\nmsg.template=msg.template+\"</style>\";\n\nmsg.template=msg.template+\"<table id=\\\"asset\\\" span=100%><tr><th>Device</th><th>Timestamp</th><th>Geo Location</th></tr>\";\nfor (var i = 0; i < AssetTagLocations.length; i++) {\n  var d = new Date(AssetTagLocations[i].timestamp);\n  if( i == current_location ) {\n    msg.template = msg.template + \"<tr style=\\\"color:white; background-color:black;\\\"><td>\"+Device+\"</td><td>\" + d.toLocaleDateString()+\" \"+d.toLocaleTimeString() + \"</td><td>\" + AssetTagLocations[i].gps.lat.substr(0,9)+\",\"+AssetTagLocations[i].gps.lon.substr(0,10) + \"</td></tr>\";\n  } else {\n//    msg.template = msg.template + \"<tr><td>\" + Device + \"</td><td>\" + d.getTime() + \"</td><td>\" + AssetTagLocations[i].gps.lat.substr(0,9)+\",\"+AssetTagLocations[i].gps.lon.substr(0,10) + \"</td></tr>\";\n    msg.template = msg.template + \"<tr><td>\" + Device + \"</td><td>\" + d.toLocaleDateString()+\" \"+d.toLocaleTimeString() + \"</td><td>\" + AssetTagLocations[i].gps.lat.substr(0,9)+\",\"+AssetTagLocations[i].gps.lon.substr(0,10) + \"</td></tr>\";\n  }\n}\nmsg.template = msg.template + \"</table>\";\nmsg.payload = AssetHistory;\nreturn msg ;\n",
       "outputs":"1",
       "noerr":0,
       "x":810,
       "y":240,
       "wires":[
          [
             "72789b5d.ba13fc",
             "59cf7b7c.4898e4"
          ]
       ]
    },
    {
       "id":"59cf7b7c.4898e4",
       "type":"ui_template",
       "z":"7d4f4176.f904a",
       "group":"dd956c5e.0a29f",
       "name":"Location Table",
       "order":0,
       "width":"11",
       "height":"10",
       "format":"<div ng-bind-html=\"msg.template\"></div>",
       "storeOutMessages":true,
       "fwdInMessages":true,
       "templateScope":"local",
       "x":1020,
       "y":240,
       "wires":[
          [
 
          ]
       ]
    },
    {
       "id":"8dae8efc.18b228",
       "type":"link in",
       "z":"7d4f4176.f904a",
       "name":"Table Highlight",
       "links":[
          "3ef8b710.42a89",
          "fb401fce.36923"
       ],
       "x":655,
       "y":240,
       "wires":[
          [
             "71bc2b5a.0a89bc"
          ]
       ]
    },
    {
       "id":"72789b5d.ba13fc",
       "type":"debug",
       "z":"7d4f4176.f904a",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"template",
       "x":1010,
       "y":200,
       "wires":[
 
       ]
    },
    {
       "id":"6790e133.f0e618",
       "type":"ui_switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"Show Geo Fence Zones",
       "group":"f46724b9.82829",
       "order":0,
       "width":0,
       "height":0,
       "passthru":true,
       "decouple":"false",
       "topic":"",
       "style":"",
       "onvalue":"true",
       "onvalueType":"bool",
       "onicon":"",
       "oncolor":"",
       "offvalue":"false",
       "offvalueType":"bool",
       "officon":"",
       "offcolor":"",
       "x":310,
       "y":640,
       "wires":[
          [
             "8b77a892.48da08"
          ]
       ]
    },
    {
       "id":"275190ab.be367",
       "type":"function",
       "z":"7d4f4176.f904a",
       "name":"Draw GeoFence Zones",
       "func":"// If the payload contains an area property - that is an array of co-ordinates, e.g.\nvar Geofence = [\n[40.98221,-74.10203],\n[40.98037,-74.08866],\n[40.97198,-74.09075],\n[40.97611,-74.10416],\n[40.98221,-74.10203]\n];\n\n// Areas\n//    iconColor : can set the colour of the polygon or line.\n//    name : is used as the id key - so can be redrawn/moved.\n//    layer : declares which layer you put it on..\n//\n//Areas, Lines and Circles can also specify more optional properties:\n//    color\n//    fillColor\n//    stroke\n//    weight\n//    opacity\n//    fill\n//    fillOpacity\n//    clickable (if true sets the passed in name as Popup)\n\n\nmsg.payload = { area : Geofence,\n                fillColor : \"blue\",\n                name : \"home\",\n              };\n\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":680,
       "y":620,
       "wires":[
          [
             "5b5a74ba.4f799c"
          ]
       ]
    },
    {
       "id":"5b5a74ba.4f799c",
       "type":"link out",
       "z":"7d4f4176.f904a",
       "name":"GeoFence Out",
       "links":[
          "5b355782.e4f618"
       ],
       "x":865,
       "y":640,
       "wires":[
 
       ]
    },
    {
       "id":"8b77a892.48da08",
       "type":"switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "property":"payload",
       "propertyType":"msg",
       "rules":[
          {
             "t":"true"
          },
          {
             "t":"false"
          }
       ],
       "checkall":"true",
       "outputs":2,
       "x":500,
       "y":640,
       "wires":[
          [
             "275190ab.be367"
          ],
          [
             "9f7a014b.7aa43"
          ]
       ]
    },
    {
       "id":"9f7a014b.7aa43",
       "type":"function",
       "z":"7d4f4176.f904a",
       "name":"Erase GeoFence Zones",
       "func":"msg.payload = { area : [],name : \"home\" };\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":690,
       "y":660,
       "wires":[
          [
             "5b5a74ba.4f799c"
          ]
       ]
    },
    {
       "id":"4cf2dac8.9df36c",
       "type":"ui_switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"Show Environmental Threshold Pins",
       "group":"f46724b9.82829",
       "order":0,
       "width":0,
       "height":0,
       "passthru":true,
       "decouple":"false",
       "topic":"",
       "style":"",
       "onvalue":"true",
       "onvalueType":"bool",
       "onicon":"",
       "oncolor":"",
       "offvalue":"false",
       "offvalueType":"bool",
       "officon":"",
       "offcolor":"",
       "x":280,
       "y":720,
       "wires":[
          [
             "f42617eb.17372"
          ]
       ]
    },
    {
       "id":"f42617eb.17372",
       "type":"switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "property":"payload",
       "propertyType":"msg",
       "rules":[
          {
             "t":"true"
          },
          {
             "t":"false"
          }
       ],
       "checkall":"true",
       "outputs":2,
       "x":500,
       "y":720,
       "wires":[
          [
             "32a0799b.7bf68e"
          ],
          [
             "583d7d3.1ba1e84"
          ]
       ]
    },
    {
       "id":"4c4c5b3e.646224",
       "type":"link out",
       "z":"7d4f4176.f904a",
       "name":"GeoFence Out",
       "links":[
          "5b355782.e4f618"
       ],
       "x":865,
       "y":720,
       "wires":[
 
       ]
    },
    {
       "id":"4cb33914.6810c8",
       "type":"ui_switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"SMS Alert when in GeoFence",
       "group":"f46724b9.82829",
       "order":0,
       "width":0,
       "height":0,
       "passthru":true,
       "decouple":"false",
       "topic":"",
       "style":"",
       "onvalue":"true",
       "onvalueType":"bool",
       "onicon":"",
       "oncolor":"",
       "offvalue":"false",
       "offvalueType":"bool",
       "officon":"",
       "offcolor":"",
       "x":300,
       "y":800,
       "wires":[
          [
             "a6a02ad9.a4d2d"
          ]
       ]
    },
    {
       "id":"20e4cacf.e43f06",
       "type":"twilio out",
       "z":"7d4f4176.f904a",
       "twilio":"8da3218b.1e59c",
       "number":"551486-0924",
       "name":"",
       "x":920,
       "y":820,
       "wires":[
 
       ]
    },
    {
       "id":"4954e2c2.7068ec",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"Medical Supplies have exceeded environment threshold",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":835,
       "wires":[
          [
             "20e4cacf.e43f06"
          ]
       ]
    },
    {
       "id":"314b7189.fce2be",
       "type":"ui_switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "label":"SMS Alert on Extreme Temp",
       "group":"f46724b9.82829",
       "order":0,
       "width":0,
       "height":0,
       "passthru":true,
       "decouple":"false",
       "topic":"",
       "style":"",
       "onvalue":"true",
       "onvalueType":"bool",
       "onicon":"fa-thermometer-full",
       "oncolor":"red",
       "offvalue":"false",
       "offvalueType":"bool",
       "officon":"",
       "offcolor":"",
       "x":300,
       "y":835,
       "wires":[
          [
             "3e5dd9d3.3a9a0e"
          ]
       ]
    },
    {
       "id":"9122d43.98a4fa8",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"Asset has arrived at destination",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":800,
       "wires":[
          [
             "20e4cacf.e43f06"
          ]
       ]
    },
    {
       "id":"a6a02ad9.a4d2d",
       "type":"switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "property":"payload",
       "propertyType":"msg",
       "rules":[
          {
             "t":"true"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":500,
       "y":800,
       "wires":[
          [
             "9122d43.98a4fa8"
          ]
       ]
    },
    {
       "id":"3e5dd9d3.3a9a0e",
       "type":"switch",
       "z":"7d4f4176.f904a",
       "name":"",
       "property":"payload",
       "propertyType":"msg",
       "rules":[
          {
             "t":"true"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":500,
       "y":835,
       "wires":[
          [
             "4954e2c2.7068ec"
          ]
       ]
    },
    {
       "id":"376d823.cf2957e",
       "type":"inject",
       "z":"27b5fae0.d780ee",
       "name":"Tick every sec",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":".5",
       "crontab":"",
       "once":true,
       "x":110,
       "y":60,
       "wires":[
          [
             "d8814f1.5fee23"
          ]
       ]
    },
    {
       "id":"df0b239e.2bbfa",
       "type":"switch",
       "z":"27b5fae0.d780ee",
       "name":"Enable/Disable Map updates",
       "property":"start-stop",
       "propertyType":"global",
       "rules":[
          {
             "t":"true"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":200,
       "y":340,
       "wires":[
          [
             "b9664a6d.1b1a98"
          ]
       ]
    },
    {
       "id":"d8814f1.5fee23",
       "type":"switch",
       "z":"27b5fae0.d780ee",
       "name":"Tick Asset History Tracker",
       "property":"db-loaded",
       "propertyType":"global",
       "rules":[
          {
             "t":"false"
          },
          {
             "t":"true"
          }
       ],
       "checkall":"true",
       "outputs":2,
       "x":200,
       "y":140,
       "wires":[
          [
             "a9e0892b.2e256"
          ],
          [
             "df0b239e.2bbfa",
             "d76ec0d.e09ae4"
          ]
       ]
    },
    {
       "id":"3e56c989.06eca6",
       "type":"debug",
       "z":"27b5fae0.d780ee",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":610,
       "y":380,
       "wires":[
 
       ]
    },
    {
       "id":"b9664a6d.1b1a98",
       "type":"function",
       "z":"27b5fae0.d780ee",
       "name":"Sort records",
       "func":"var WhichKit=global.get(\"KitNum\");\n// Make certain that an Asset Kit has been selected from the drop down\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\nvar AssetTagLocations = [];\nvar starttime = global.get(\"start-time\");\nvar endtime = global.get(\"end-time\");\n\nif( AssetHistory.length === 0 ) { return null ; }\n\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        // Filter on the selected timestamp range\n        if( (AssetHistory[i].timestamp > starttime) && (AssetHistory[i].timestamp < endtime)) {\n            AssetTagLocations.push(AssetHistory[i]);  // Onion GPS timestamp has 10 digit precision\n        }\n    }\n}\n\n// Sort by timestamp\nAssetTagLocations.sort(function(x,y) {\n    return x.timestamp - y.timestamp;\n});\n\n// Query the counter, or 0 the first loop through...\nvar current_location = global.get(\"location\")||0;\ncurrent_location+=1;\nif( current_location == AssetTagLocations.length) {\n    current_location = 0;\n}\nglobal.set(\"location\",current_location);\n\n//msg.payload = AssetTagLocations[current_location].gps;\n//msg.payload.timestamp = AssetTagLocations[current_location].timestamp;\nmsg.payload = AssetTagLocations[current_location];\nreturn msg ;\n",
       "outputs":"1",
       "noerr":0,
       "x":430,
       "y":340,
       "wires":[
          [
             "3e56c989.06eca6",
             "fb401fce.36923",
             "4637d51f.10ca64"
          ]
       ]
    },
    {
       "id":"36c1c79e.a62d78",
       "type":"worldmap",
       "z":"27b5fae0.d780ee",
       "name":"Update Asset Location on Map",
       "lat":"40.973359599999995",
       "lon":"-74.09271869999999",
       "zoom":"15",
       "layer":"OSM",
       "cluster":"0",
       "maxage":"",
       "usermenu":"show",
       "panit":"true",
       "x":1170,
       "y":340,
       "wires":[
 
       ]
    },
    {
       "id":"b5369014.b76358",
       "type":"comment",
       "z":"27b5fae0.d780ee",
       "name":"Find Location Records for a particular asset / date range",
       "info":"",
       "x":280,
       "y":380,
       "wires":[
 
       ]
    },
    {
       "id":"d76ec0d.e09ae4",
       "type":"switch",
       "z":"27b5fae0.d780ee",
       "name":"Zoom to last location",
       "property":"zoom",
       "propertyType":"global",
       "rules":[
          {
             "t":"true"
          }
       ],
       "checkall":"true",
       "outputs":1,
       "x":480,
       "y":140,
       "wires":[
          [
             "6bee5021.d8fee8"
          ]
       ]
    },
    {
       "id":"6bee5021.d8fee8",
       "type":"function",
       "z":"27b5fae0.d780ee",
       "name":"Zoom to last location",
       "func":"if ( global.get(\"ZoomedAlready\")) {\n    return null;\n}\n\nvar WhichKit=global.get(\"KitNum\");\n// No Asset Kit has been selected\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\n// find the last recorded timestamp for an Asset\nvar lastRecord= {lat:0, lon:0, timestamp:0};\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        if( lastRecord.timestamp < AssetHistory[i].timestamp ) {\n            lastRecord.timestamp = AssetHistory[i].timestamp ;\n            lastRecord.lat = AssetHistory[i].gps.lat;\n            lastRecord.lon = AssetHistory[i].gps.lon;\n        }\n    }\n}\n\n// Move Map icon to its last reported location \nvar home = {\n    name       : \"Particle Electron\", \n    AssetTag   : global.get(\"KitNum\"),\n    lat        : lastRecord.lat,\n    lon        : lastRecord.lon,\n    icon       : \"hostile\",  //\"briefcase\" // from http://fontawesome.io/icons/\n    iconColor  : \"blue\",\n//    LastSeen   : new Date(lastRecord.timestamp),   // Cloudant\n    LastSeen   : lastRecord.timestamp,               // Blockchain\n    AssetOwner : \"John Walicki\",\n    // Recenter and zoom to the last location of this AssetTag\n    command    : { zoom:18, addtoheatmap:true, autopan:true }\n};\nmsg.payload = home;\n\nmsg.loop = 0;  \nglobal.set(\"ZoomedAlready\", true);\nreturn msg ;\n",
       "outputs":1,
       "noerr":0,
       "x":700,
       "y":140,
       "wires":[
          [
             "334cfb2f.407f4c"
          ]
       ]
    },
    {
       "id":"334cfb2f.407f4c",
       "type":"delay",
       "z":"27b5fae0.d780ee",
       "name":"Zoom Slowly",
       "pauseType":"delay",
       "timeout":"1",
       "timeoutUnits":"seconds",
       "rate":"1",
       "nbRateUnits":"1",
       "rateUnits":"second",
       "randomFirst":"1",
       "randomLast":"5",
       "randomUnits":"seconds",
       "drop":false,
       "x":910,
       "y":140,
       "wires":[
          [
             "ab451b3e.73c5e8"
          ]
       ]
    },
    {
       "id":"96bb61f0.56cfe8",
       "type":"debug",
       "z":"27b5fae0.d780ee",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1110,
       "y":220,
       "wires":[
 
       ]
    },
    {
       "id":"fb401fce.36923",
       "type":"link out",
       "z":"27b5fae0.d780ee",
       "name":"",
       "links":[
          "8dae8efc.18b228"
       ],
       "x":555,
       "y":300,
       "wires":[
 
       ]
    },
    {
       "id":"5b355782.e4f618",
       "type":"link in",
       "z":"27b5fae0.d780ee",
       "name":"GeoFence In",
       "links":[
          "f0297295.998688",
          "7922936a.e4605c",
          "5b5a74ba.4f799c",
          "4c4c5b3e.646224"
       ],
       "x":935,
       "y":260,
       "wires":[
          [
             "36c1c79e.a62d78"
          ]
       ]
    },
    {
       "id":"4637d51f.10ca64",
       "type":"function",
       "z":"27b5fae0.d780ee",
       "name":"Move Asset",
       "func":"if( typeof msg.payload.gps == 'undefined' ) {\n    return null;\n}\n\n// Track AssetTag around a Map\n// Set all of the common attributes\nvar asset = {\n        name       : \"Particle Electron\", \n        AssetTag   : global.get(\"KitNum\"),\n        lat        : msg.payload.gps.lat,\n        lon        : msg.payload.gps.lon,\n        icon       : \"fa-medkit\",\n        iconColor  : \"blue\",\n        LastSeen   : new Date(msg.payload.timestamp),\n        AssetOwner : \"John Walicki\",\n        // Recenter and zoom if there is a new AssetTag selected\n        command    : { zoom:10, autopan:true }\n    };\n    \n// Is this a Temperature record \nif( typeof msg.payload.temperature != 'undefined' ) {\n    asset.temperature = msg.payload.temperature ;\n    // Look for the max temp and flash the medkit RED\n    if (  msg.payload.temperature > 10 ) {\n        asset.iconColor = \"red\";\n    }\n}\n\n// Is this a Accelerometer record\nif( typeof msg.payload.accel != 'undefined' ) {\n    // The Particle Electron has its own threshold filter\n    // Max vibration has been triggered\n    // Flash the medkit RED\n    asset.vibration = \"X:\"+msg.payload.accel.acc_x +\" Y:\"+msg.payload.accel.acc_y+\" Z:\"+msg.payload.accel.acc_z;\n    asset.iconColor = \"red\";\n}\n\nmsg.payload = asset;\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":610,
       "y":340,
       "wires":[
          [
             "36c1c79e.a62d78",
             "f48d68fc.d985a",
             "34fcf62c.85ff92"
          ]
       ]
    },
    {
       "id":"ab451b3e.73c5e8",
       "type":"function",
       "z":"27b5fae0.d780ee",
       "name":"Zoom In",
       "func":"zoomlevel = 10 + msg.loop;\n\n// Recenter and zoom to the last location of this AssetTag\nmsg.payload.command.zoom = zoomlevel;\n\nif( msg.loop < 10 ) {\n    msg.loop = msg.loop + 1;\n\treturn [msg,msg];\n} else {\n\treturn [msg,null];\n}",
       "outputs":"2",
       "noerr":0,
       "x":900,
       "y":220,
       "wires":[
          [
             "36c1c79e.a62d78",
             "96bb61f0.56cfe8"
          ],
          [
             "334cfb2f.407f4c"
          ]
       ]
    },
    {
       "id":"f48d68fc.d985a",
       "type":"function",
       "z":"27b5fae0.d780ee",
       "name":"Extreme Environmental Pins",
       "func":"var ShowEnvironmentalPins = global.get(\"ShowEnvironmentalPins\") || false;\nif( ShowEnvironmentalPins === false ) {\n    return null;\n}\n\nvar d = new Date(msg.payload.timestamp);\n\nif( typeof msg.payload.temperature != 'undefined' ) {\n    // Look for the max temp and flash the medkit RED\n    if (  msg.payload.temperature > 10 ) {\n        var count = context.get('count') || 0;\n        count += 1;\n        context.set('count',count);\n        msg.payload = { \n                name        : \"Medical Supplies exposed to extreme temp #\"+count,\n                AssetTag    : global.get(\"KitNum\"),\n                lat         : msg.payload.lat,\n                lon         : msg.payload.lon,\n                icon        : \"fa-thermometer-full\",\n                temperature : msg.payload.temperature,\n                iconColor   : \"red\",\n                layer       : \"threshold\",\n                EventOccurence : d,\n                AssetOwner  : \"John Walicki\",\n                command     : { zoom : 13, autopan : true }\n            };\n        return msg;\n    }\n}\n\nif( typeof msg.payload.vibration != 'undefined') {\n    var vcount = context.get('vcount') || 0;\n    vcount += 1;\n    context.set('vcount',vcount);\n    msg.payload = { \n            name        : \"Medical Supplies exposed to extreme vibrations #\"+vcount,\n            AssetTag    : global.get(\"KitNum\"),\n            lat         : msg.payload.lat,\n            lon         : msg.payload.lon,\n            icon        : \"fa-bullseye\",\n            vibration   : msg.payload.vibration,\n            iconColor   : \"red\",\n            layer       : \"threshold\",\n            EventOccurence : d,\n            AssetOwner  : \"John Walicki\",\n            command     : { zoom : 13, autopan : true }\n        };\n    return msg;\n}\n\nreturn null;",
       "outputs":1,
       "noerr":0,
       "x":860,
       "y":380,
       "wires":[
          [
             "36c1c79e.a62d78",
             "6209dcb9.e088e4"
          ]
       ]
    },
    {
       "id":"a9e0892b.2e256",
       "type":"link out",
       "z":"27b5fae0.d780ee",
       "name":"Track Assets",
       "links":[
          "47d78f7e.03d968"
       ],
       "x":420,
       "y":80,
       "wires":[
 
       ]
    },
    {
       "id":"34fcf62c.85ff92",
       "type":"debug",
       "z":"27b5fae0.d780ee",
       "name":"",
       "active":false,
       "console":"false",
       "complete":"false",
       "x":810,
       "y":300,
       "wires":[
 
       ]
    },
    {
       "id":"6209dcb9.e088e4",
       "type":"debug",
       "z":"27b5fae0.d780ee",
       "name":"",
       "active":true,
       "console":"false",
       "complete":"false",
       "x":1110,
       "y":420,
       "wires":[
 
       ]
    },
    {
       "id":"525488cd.f8907",
       "type":"delay",
       "z":"543de17.27c702",
       "name":"",
       "pauseType":"delay",
       "timeout":"10",
       "timeoutUnits":"seconds",
       "rate":"1",
       "nbRateUnits":"1",
       "rateUnits":"second",
       "randomFirst":"1",
       "randomLast":"5",
       "randomUnits":"seconds",
       "drop":false,
       "x":1240,
       "y":260,
       "wires":[
          [
             "cd263e59.11b178"
          ]
       ]
    },
    {
       "id":"9a9e6f23.fffbb8",
       "type":"change",
       "z":"311fef0c.4f3fa",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"FabricIP",
             "pt":"msg",
             "to":"HyperLedgerFabricIP",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":400,
       "y":260,
       "wires":[
          [
             "ccfe4ac7.89b06"
          ]
       ]
    },
    {
       "id":"eb28048c.b942c",
       "type":"change",
       "z":"311fef0c.4f3fa",
       "name":"",
       "rules":[
          {
             "t":"set",
             "p":"FabricIP",
             "pt":"msg",
             "to":"HyperLedgerFabricIP",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":400,
       "y":500,
       "wires":[
          [
             "a445b058.c14848"
          ]
       ]
    },
    {
       "id":"ff85eb48.05ebe8",
       "type":"change",
       "z":"85208c41.97d0e",
       "name":"Build a TemperatureReading Transaction",
       "rules":[
          {
             "t":"set",
             "p":"FabricIP",
             "pt":"msg",
             "to":"HyperLedgerFabricIP",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":500,
       "y":380,
       "wires":[
          [
             "d0c1e899.536138"
          ]
       ]
    },
    {
       "id":"d0c1e899.536138",
       "type":"http request",
       "z":"85208c41.97d0e",
       "name":"Blockchain GET TemperatureReading",
       "method":"GET",
       "ret":"obj",
       "url":"http://{{FabricIP}}:31090/api/TemperatureReading",
       "tls":"",
       "x":830,
       "y":380,
       "wires":[
          [
             "233b0e58.285bca",
             "c116fb50.7e10c"
          ]
       ]
    },
    {
       "id":"8ba8715a.af4418",
       "type":"change",
       "z":"85208c41.97d0e",
       "name":"Build a AccelReading Transaction",
       "rules":[
          {
             "t":"set",
             "p":"FabricIP",
             "pt":"msg",
             "to":"HyperLedgerFabricIP",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":480,
       "y":660,
       "wires":[
          [
             "6d56b27e.a4c6ac"
          ]
       ]
    },
    {
       "id":"6d56b27e.a4c6ac",
       "type":"http request",
       "z":"85208c41.97d0e",
       "name":"Blockchain GET AccelReading",
       "method":"GET",
       "ret":"obj",
       "url":"http://{{FabricIP}}:31090/api/AccelReading",
       "tls":"",
       "x":810,
       "y":660,
       "wires":[
          [
             "15d666ff.0366e1"
          ]
       ]
    },
    {
       "id":"32a0799b.7bf68e",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"Draw Alert Pins",
       "rules":[
          {
             "t":"set",
             "p":"ShowEnvironmentalPins",
             "pt":"global",
             "to":"true",
             "tot":"bool"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":705,
       "wires":[
          [
             "4c4c5b3e.646224"
          ]
       ]
    },
    {
       "id":"583d7d3.1ba1e84",
       "type":"change",
       "z":"7d4f4176.f904a",
       "name":"Erase Alert Pins",
       "rules":[
          {
             "t":"set",
             "p":"ShowEnvironmentalPins",
             "pt":"global",
             "to":"false",
             "tot":"bool"
          },
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"{ \"command\" : { \"clear\":\"threshold\" } }",
             "tot":"json"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":740,
       "wires":[
          [
             "4c4c5b3e.646224"
          ]
       ]
    },
    {
       "id":"1ef5e8cb.de17c7",
       "type":"particle-func",
       "z":"321651a3.d3511e",
       "devid":"<your Particle Device ID>",
       "fname":"GetCurrTemp",
       "param":"",
       "repeat":0,
       "once":false,
       "x":570,
       "y":1155,
       "wires":[
          [
             "f33638fb.799d3"
          ]
       ]
    },
    {
       "id":"f33638fb.799d3",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "tosidebar":true,
       "console":false,
       "tostatus":false,
       "complete":"false",
       "x":870,
       "y":1155,
       "wires":[
 
       ]
    },
    {
       "id":"68ac3667.b4b19",
       "type":"inject",
       "z":"321651a3.d3511e",
       "name":"GetCurrTemp using a ParticleFunc node",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "onceDelay":0.1,
       "x":190,
       "y":1155,
       "wires":[
          [
             "1ef5e8cb.de17c7"
          ]
       ]
    },
    {
       "id":"f5a0c265.b398b8",
       "type":"inject",
       "z":"939000b1.86a178",
       "name":"ReInitialize every time Node-RED is deployed",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":true,
       "onceDelay":0.1,
       "x":230,
       "y":320,
       "wires":[
          [
             "ae25428a.42dd1"
          ]
       ]
    },
    {
       "id":"4a7ca4df.8bde7c",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"Reset the map data array on every Node-RED deploy",
       "info":"",
       "x":250,
       "y":280,
       "wires":[
 
       ]
    },
    {
       "id":"8993a0ca.f18ab",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"READ this comment - How to configure this set of flows",
       "info":"1. Hopefully you're here because you're following the README at\nhttps://github.com/johnwalicki/IoT-AssetTracking-Perishable-Network-Blockchain\n\n2. If you have already configured your Hyperledger Fabric\nyou know the public IP address to the Composer REST API\nHint - run this command:\n  $ bx cs workers blockchain\n\n  You need to insert the HyperLedger Fabric IP address \n    - On this flow, open the Change node below and set the HyperLedgerFabricIP\n    \n3. On this Init Perishable Blockchain Demo flow\n    - For the demo / workshop, copy the Particle Device ID and Particle Access Token\n      into the change node",
       "x":400,
       "y":40,
       "wires":[
 
       ]
    },
    {
       "id":"ec441a7a.3b43f",
       "type":"inject",
       "z":"939000b1.86a178",
       "name":"Manual - One Time Only initialization of Blockchain Network Demo",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "onceDelay":0.1,
       "x":290,
       "y":140,
       "wires":[
          [
             "5f25b387.ee380c"
          ]
       ]
    },
    {
       "id":"45637b4a.8f89fc",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"Only initialize the Blockchain Shipment Demo once!",
       "info":"",
       "x":250,
       "y":100,
       "wires":[
 
       ]
    },
    {
       "id":"8fa1d535.c3b1b",
       "type":"link out",
       "z":"939000b1.86a178",
       "name":"Start One Time Only Init of Blockchain Demo ",
       "links":[
          "65c24837.676c78"
       ],
       "x":875,
       "y":140,
       "wires":[
 
       ]
    },
    {
       "id":"65c24837.676c78",
       "type":"link in",
       "z":"85208c41.97d0e",
       "name":"One Time Only Init of Blockchain Demo",
       "links":[
          "8fa1d535.c3b1b"
       ],
       "x":175,
       "y":100,
       "wires":[
          [
             "6273fc34.f28dac"
          ]
       ]
    },
    {
       "id":"2ae4ef8e.d0c208",
       "type":"link in",
       "z":"311fef0c.4f3fa",
       "name":"Re-Read the Asset Database into Tracking Array",
       "links":[
          "ea60ff7.b605e"
       ],
       "x":235,
       "y":100,
       "wires":[
          [
             "34220dd8.7a2662"
          ]
       ]
    },
    {
       "id":"ea60ff7.b605e",
       "type":"link out",
       "z":"939000b1.86a178",
       "name":"Init Tracker #1",
       "links":[
          "2ae4ef8e.d0c208",
          "1cc57057.fd372",
          "a6c45c19.4d4ae",
          "1f1ec031.016888",
          "acb07848.f82168",
          "f98c04ae.2954a"
       ],
       "x":735,
       "y":320,
       "wires":[
 
       ]
    },
    {
       "id":"1f1ec031.016888",
       "type":"link in",
       "z":"7d4f4176.f904a",
       "name":"Init Dashboard",
       "links":[
          "ea60ff7.b605e"
       ],
       "x":115,
       "y":220,
       "wires":[
          [
             "c7270785.b51a7",
             "b6fb654f.982488",
             "6224b123.c5ae2",
             "c036f841.da4808"
          ]
       ]
    },
    {
       "id":"12da2cac.645a03",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"Reload the Geolocation transaction history from the Blockchain",
       "info":"",
       "x":660,
       "y":480,
       "wires":[
 
       ]
    },
    {
       "id":"cdbb9480.b0513",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"Initialize the Asset Tracking Map Dashboard",
       "info":"",
       "x":600,
       "y":440,
       "wires":[
 
       ]
    },
    {
       "id":"5f25b387.ee380c",
       "type":"change",
       "z":"939000b1.86a178",
       "name":"Set HyperLedgerFabricIP",
       "rules":[
          {
             "t":"set",
             "p":"HyperLedgerFabricIP",
             "pt":"global",
             "to":"<your Hyperledger Fabric Public IP>",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":670,
       "y":140,
       "wires":[
          [
             "8fa1d535.c3b1b"
          ]
       ]
    },
    {
       "id":"d0f2146a.e2f55",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Set Particle Electron vars",
       "rules":[
          {
             "t":"set",
             "p":"ParticleElectron",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"ParticleAccessToken",
             "pt":"msg",
             "to":"ParticleAccessToken",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"headers",
             "pt":"msg",
             "to":"{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
             "tot":"json"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":590,
       "y":100,
       "wires":[
          [
             "a1fc0f64.783ef8"
          ]
       ]
    },
    {
       "id":"2df1da79.025396",
       "type":"change",
       "z":"543de17.27c702",
       "name":"Particle Electron to Monitor",
       "rules":[
          {
             "t":"set",
             "p":"topic",
             "pt":"msg",
             "to":"devid",
             "tot":"str"
          },
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":300,
       "y":80,
       "wires":[
          [
             "e8a0947.1af0068",
             "66bbaa96.e59fdc",
             "ccdf2fa5.6d19d8"
          ]
       ]
    },
    {
       "id":"a6c45c19.4d4ae",
       "type":"link in",
       "z":"543de17.27c702",
       "name":"Init Particle Receiver",
       "links":[
          "ea60ff7.b605e",
          "1eca0fa5.580e1"
       ],
       "x":95,
       "y":80,
       "wires":[
          [
             "2df1da79.025396"
          ]
       ]
    },
    {
       "id":"bcd195a2.beaca8",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"Select the Particle Electron to monitor",
       "info":"",
       "x":580,
       "y":360,
       "wires":[
 
       ]
    },
    {
       "id":"1eca0fa5.580e1",
       "type":"link out",
       "z":"321651a3.d3511e",
       "name":"Select a Particle",
       "links":[
          "a6c45c19.4d4ae",
          "acb07848.f82168",
          "f98c04ae.2954a"
       ],
       "x":575,
       "y":200,
       "wires":[
 
       ]
    },
    {
       "id":"4f06019a.5e44",
       "type":"function",
       "z":"321651a3.d3511e",
       "name":"Load Dropdown",
       "func":"// msg.options should be an array of [\"label\":\"value\"] pairs\nmsg.options = [ {\"Electron 3G #1\":global.get(\"ParticleDeviceID\") },\n                {\"Electron 2G #2\":\"32\"}\n              ];\nreturn msg;",
       "outputs":1,
       "noerr":0,
       "x":175,
       "y":180,
       "wires":[
          [
             "83e5ce7c.277b78"
          ]
       ]
    },
    {
       "id":"1cc57057.fd372",
       "type":"link in",
       "z":"321651a3.d3511e",
       "name":"",
       "links":[
          "ea60ff7.b605e"
       ],
       "x":55,
       "y":180,
       "wires":[
          [
             "4f06019a.5e44"
          ]
       ]
    },
    {
       "id":"984c8431.557c08",
       "type":"comment",
       "z":"939000b1.86a178",
       "name":"Initialize the Particle Electron to monitor",
       "info":"",
       "x":590,
       "y":400,
       "wires":[
 
       ]
    },
    {
       "id":"ae25428a.42dd1",
       "type":"change",
       "z":"939000b1.86a178",
       "name":"Particle Electron to Monitor",
       "rules":[
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"global",
             "to":"<your Particle Device ID>",
             "tot":"str"
          },
          {
             "t":"set",
             "p":"ParticleAccessToken",
             "pt":"global",
             "to":"<your Particle Access Token>",
             "tot":"str"
          },
          {
             "t":"set",
             "p":"HyperLedgerFabricIP",
             "pt":"global",
             "to":"<your Hyperledger Fabric Public IP>",
             "tot":"str"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":560,
       "y":320,
       "wires":[
          [
             "ea60ff7.b605e"
          ]
       ]
    },
    {
       "id":"f98c04ae.2954a",
       "type":"link in",
       "z":"543de17.27c702",
       "name":"Init Particle Receiver",
       "links":[
          "ea60ff7.b605e",
          "1eca0fa5.580e1"
       ],
       "x":95,
       "y":540,
       "wires":[
          [
             "142d9f3d.697ed9"
          ]
       ]
    },
    {
       "id":"142d9f3d.697ed9",
       "type":"change",
       "z":"543de17.27c702",
       "name":"Particle Electron to Monitor",
       "rules":[
          {
             "t":"set",
             "p":"topic",
             "pt":"msg",
             "to":"evtname",
             "tot":"str"
          },
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"\"hook-response/deviceLocator/\"& msg.ParticleDeviceID & \"/0\"",
             "tot":"jsonata"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":260,
       "y":540,
       "wires":[
          [
             "3223aefd.5fa5c2"
          ]
       ]
    },
    {
       "id":"a2a41bed.894428",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Prep Particle.io URL",
       "rules":[
          {
             "t":"set",
             "p":"headers",
             "pt":"msg",
             "to":"{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
             "tot":"json"
          },
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"ParticleAccessToken",
             "pt":"msg",
             "to":"ParticleAccessToken",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":215,
       "y":700,
       "wires":[
          [
             "699b77e3.e322e8",
             "754330d2.387fc"
          ]
       ]
    },
    {
       "id":"b0bb7a3b.62b89",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Prep Particle.io URL",
       "rules":[
          {
             "t":"set",
             "p":"headers",
             "pt":"msg",
             "to":"{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
             "tot":"json"
          },
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"ParticleAccessToken",
             "pt":"msg",
             "to":"ParticleAccessToken",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":215,
       "y":540,
       "wires":[
          [
             "a7acd57d.923e3",
             "48bc06ac.288c88"
          ]
       ]
    },
    {
       "id":"1c49a607.98485a",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Prep Particle.io URL",
       "rules":[
          {
             "t":"set",
             "p":"headers",
             "pt":"msg",
             "to":"{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
             "tot":"json"
          },
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"ParticleAccessToken",
             "pt":"msg",
             "to":"ParticleAccessToken",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":300,
       "y":980,
       "wires":[
          [
             "ca39954e.6d5e68",
             "300cda8d.21cad6"
          ]
       ]
    },
    {
       "id":"88d56aa4.42c8a8",
       "type":"change",
       "z":"321651a3.d3511e",
       "name":"Prep Particle.io URL",
       "rules":[
          {
             "t":"set",
             "p":"headers",
             "pt":"msg",
             "to":"{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
             "tot":"json"
          },
          {
             "t":"set",
             "p":"ParticleDeviceID",
             "pt":"msg",
             "to":"ParticleDeviceID",
             "tot":"global"
          },
          {
             "t":"set",
             "p":"ParticleAccessToken",
             "pt":"msg",
             "to":"ParticleAccessToken",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":295,
       "y":815,
       "wires":[
          [
             "86747b52.e25aa8",
             "7167fdd8.fbb194"
          ]
       ]
    },
    {
       "id":"76385dae.10f724",
       "type":"particle-func",
       "z":"321651a3.d3511e",
       "devid":"<your Particle Device ID>",
       "fname":"GetRecentXYZ",
       "param":"",
       "repeat":0,
       "once":false,
       "x":570,
       "y":1200,
       "wires":[
          [
             "494f7cc9.115474"
          ]
       ]
    },
    {
       "id":"494f7cc9.115474",
       "type":"debug",
       "z":"321651a3.d3511e",
       "name":"",
       "active":true,
       "tosidebar":true,
       "console":false,
       "tostatus":false,
       "complete":"false",
       "x":870,
       "y":1200,
       "wires":[
 
       ]
    },
    {
       "id":"a8912c3.1987a5",
       "type":"inject",
       "z":"321651a3.d3511e",
       "name":"GetRecentXYZ using a ParticleFunc node",
       "topic":"",
       "payload":"true",
       "payloadType":"bool",
       "repeat":"",
       "crontab":"",
       "once":false,
       "onceDelay":0.1,
       "x":200,
       "y":1200,
       "wires":[
          [
             "76385dae.10f724"
          ]
       ]
    },
    {
       "id":"6273fc34.f28dac",
       "type":"change",
       "z":"85208c41.97d0e",
       "name":"Begin Perishable Shipment Demo",
       "rules":[
          {
             "t":"set",
             "p":"payload",
             "pt":"msg",
             "to":"{\"$class\":\"org.acme.shipping.perishable.SetupDemo\"}",
             "tot":"json"
          },
          {
             "t":"set",
             "p":"FabricIP",
             "pt":"msg",
             "to":"HyperLedgerFabricIP",
             "tot":"global"
          }
       ],
       "action":"",
       "property":"",
       "from":"",
       "to":"",
       "reg":false,
       "x":385,
       "y":100,
       "wires":[
          [
             "a508471.74a83b8",
             "5b11db32.56c154"
          ]
       ]
    },
    {
       "id":"b6511329.ad7068",
       "type":"comment",
       "z":"321651a3.d3511e",
       "name":"Not used - another / less accurate technique to query the Particle Electron",
       "info":"",
       "x":290,
       "y":1115,
       "wires":[
 
       ]
    },
    {
       "id":"cd8c7c86.2863e",
       "type":"comment",
       "z":"543de17.27c702",
       "name":"Unused but useful to see Device Locator events arrive",
       "info":"",
       "x":910,
       "y":640,
       "wires":[
 
       ]
    }
 ]