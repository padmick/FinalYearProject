{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "extensions_config_storageAccountName": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "extensions_config_storageAccountKey": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "extensions_config_commandToExecute": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "extensions_config_storageAccountName_1": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "extensions_config_storageAccountKey_1": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "extensions_config_commandToExecute_1": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "servers_db_7ty3pq_woo_name": {
            "defaultValue": "db-7ty3pq-woo",
            "type": "String"
        },
        "vaults_eth7as7h6_akv_name": {
            "defaultValue": "eth7as7h6-akv",
            "type": "String"
        },
        "sites_woodblockchain_7ty3pq_name": {
            "defaultValue": "woodblockchain-7ty3pq",
            "type": "String"
        },
        "webtests_website_ui_test_name": {
            "defaultValue": "website-ui-test",
            "type": "String"
        },
        "webtests_website_api_test_name": {
            "defaultValue": "website-api-test",
            "type": "String"
        },
        "serverfarms_woodblockchain_plan_name": {
            "defaultValue": "woodblockchain-plan",
            "type": "String"
        },
        "sites_woodblockchain_7ty3pq_api_name": {
            "defaultValue": "woodblockchain-7ty3pq-api",
            "type": "String"
        },
        "vaults_woodblockchain_7ty3pq_name": {
            "defaultValue": "woodblockchain-7ty3pq",
            "type": "String"
        },
        "networkInterfaces_vl_nic0_reg1_name": {
            "defaultValue": "vl-nic0-reg1",
            "type": "String"
        },
        "networkInterfaces_vl_nic1_reg1_name": {
            "defaultValue": "vl-nic1-reg1",
            "type": "String"
        },
        "storageAccounts_eth7as7h6store_name": {
            "defaultValue": "eth7as7h6store",
            "type": "String"
        },
        "loadBalancers_woodblockchain_lb_name": {
            "defaultValue": "woodblockchain-lb",
            "type": "String"
        },
        "topics_woodblockchain_eg_7ty3pq_name": {
            "defaultValue": "woodblockchain-eg-7ty3pq",
            "type": "String"
        },
        "alertrules_website_ui_test_alert_name": {
            "defaultValue": "website-ui-test-alert",
            "type": "String"
        },
        "components_woodblockchain_7ty3pq_name": {
            "defaultValue": "woodblockchain-7ty3pq",
            "type": "String"
        },
        "loadBalancers_eth7as7h6_vlLb_reg1_name": {
            "defaultValue": "eth7as7h6-vlLb-reg1",
            "type": "String"
        },
        "alertrules_website_api_test_alert_name": {
            "defaultValue": "website-api-test-alert",
            "type": "String"
        },
        "virtualMachines_vl_eth7as7h6_reg1_0_name": {
            "defaultValue": "vl-eth7as7h6-reg1-0",
            "type": "String"
        },
        "virtualMachines_vl_eth7as7h6_reg1_1_name": {
            "defaultValue": "vl-eth7as7h6-reg1-1",
            "type": "String"
        },
        "virtualNetworks_eth7as7h6_vnet_reg1_name": {
            "defaultValue": "eth7as7h6-vnet-reg1",
            "type": "String"
        },
        "virtualNetworks_woodblockchain_vnet_name": {
            "defaultValue": "woodblockchain-vnet",
            "type": "String"
        },
        "IoTApps_blockchain_iot_connection_name": {
            "defaultValue": "blockchain-iot-connection",
            "type": "String"
        },
        "workspaces_eth7as7h6_oms_name": {
            "defaultValue": "eth7as7h6-oms",
            "type": "String"
        },
        "storageAccounts_7ty3pqwoodblockchain_name": {
            "defaultValue": "7ty3pqwoodblockchain",
            "type": "String"
        },
        "publicIPAddresses_eth7as7h6_lbpip_reg1_name": {
            "defaultValue": "eth7as7h6-lbpip-reg1",
            "type": "String"
        },
        "namespaces_woodblockchain_sb_7ty3pq_name": {
            "defaultValue": "woodblockchain-sb-7ty3pq",
            "type": "String"
        },
        "availabilitySets_poaAvailabilitySet_reg1_name": {
            "defaultValue": "poaAvailabilitySet-reg1",
            "type": "String"
        },
        "networkSecurityGroups_eth7as7h6_vlNsg_reg1_name": {
            "defaultValue": "eth7as7h6-vlNsg-reg1",
            "type": "String"
        },
        "publicIPAddresses_woodblockchain_lb_public_ip_name": {
            "defaultValue": "woodblockchain-lb-public-ip",
            "type": "String"
        },
        "virtualMachineScaleSets_woodblockchain_worker_n_name": {
            "defaultValue": "woodblockchain-worker-n",
            "type": "String"
        },
        "alertrules_Failure_Anomalies___woodblockchain_7ty3pq_name": {
            "defaultValue": "Failure Anomalies - woodblockchain-7ty3pq",
            "type": "String"
        },
        "networkSecurityGroups_woodblockchain_subnet_workers_nsg_name": {
            "defaultValue": "woodblockchain-subnet-workers-nsg",
            "type": "String"
        },
        "disks_woodblockchain_workewoodblockchain_workerOS__1_b0d5560091bb401d817f864fc6fe3983_externalid": {
            "defaultValue": "/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourceGroups/woodblockchain/providers/Microsoft.Compute/disks/woodblockchain-workewoodblockchain-workerOS__1_b0d5560091bb401d817f864fc6fe3983",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2018-01-01",
            "name": "[parameters('topics_woodblockchain_eg_7ty3pq_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "endpoint": "[concat('https://', parameters('topics_woodblockchain_eg_7ty3pq_name'), '.westeurope-1.eventgrid.azure.net/api/events')]"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('components_woodblockchain_7ty3pq_name')]",
            "location": "westeurope",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "microsoft.insights/webtests",
            "apiVersion": "2015-05-01",
            "name": "[parameters('webtests_website_api_test_name')]",
            "location": "westeurope",
            "tags": {
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourcegroups/woodblockchain/providers/microsoft.insights/components/woodblockchain-7ty3pq": "Resource"
            },
            "properties": {
                "SyntheticMonitorId": "[parameters('webtests_website_api_test_name')]",
                "Name": "[parameters('webtests_website_api_test_name')]",
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "ping",
                "Locations": [
                    {
                        "Id": "us-tx-sn1-azr"
                    },
                    {
                        "Id": "us-il-ch1-azr"
                    },
                    {
                        "Id": "us-ca-sjc-azr"
                    },
                    {
                        "Id": "us-va-ash-azr"
                    },
                    {
                        "Id": "us-fl-mia-edge"
                    }
                ],
                "Configuration": {
                    "WebTest": "[concat('<WebTest Name=\"', parameters('webtests_website_api_test_name'), '\" Enabled=\"True\" Timeout=\"120\" StopOnError=\"False\"> <Items> <Request Method=\"GET\" Version=\"1.1\" Url=\"https://woodblockchain-7ty3pq-api.azurewebsites.net/api/health\" ThinkTime=\"0\" Timeout=\"120\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" ExpectedHttpStatusCode=\"200\" IgnoreHttpStatusCode=\"False\" /> </Items> </WebTest>')]"
                }
            }
        },
        {
            "type": "microsoft.insights/webtests",
            "apiVersion": "2015-05-01",
            "name": "[parameters('webtests_website_ui_test_name')]",
            "location": "westeurope",
            "tags": {
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourcegroups/woodblockchain/providers/microsoft.insights/components/woodblockchain-7ty3pq": "Resource"
            },
            "properties": {
                "SyntheticMonitorId": "[parameters('webtests_website_ui_test_name')]",
                "Name": "[parameters('webtests_website_ui_test_name')]",
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "ping",
                "Locations": [
                    {
                        "Id": "us-tx-sn1-azr"
                    },
                    {
                        "Id": "us-il-ch1-azr"
                    },
                    {
                        "Id": "us-ca-sjc-azr"
                    },
                    {
                        "Id": "us-va-ash-azr"
                    },
                    {
                        "Id": "us-fl-mia-edge"
                    }
                ],
                "Configuration": {
                    "WebTest": "[concat('<WebTest Name=\"', parameters('webtests_website_ui_test_name'), '\" Enabled=\"True\" Timeout=\"120\" StopOnError=\"False\"> <Items> <Request Method=\"GET\" Version=\"1.1\" Url=\"https://woodblockchain-7ty3pq.azurewebsites.net\" ThinkTime=\"0\" Timeout=\"120\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" ExpectedHttpStatusCode=\"200\" IgnoreHttpStatusCode=\"False\" /> </Items> </WebTest>')]"
                }
            }
        },
        {
            "type": "Microsoft.IoTCentral/IoTApps",
            "apiVersion": "2018-09-01",
            "name": "[parameters('IoTApps_blockchain_iot_connection_name')]",
            "location": "westeurope",
            "sku": {
                "name": "S1"
            },
            "properties": {
                "displayName": "[parameters('IoTApps_blockchain_iot_connection_name')]",
                "subdomain": "[parameters('IoTApps_blockchain_iot_connection_name')]",
                "template": "iotc-demo@1.0.0"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('vaults_eth7as7h6_akv_name')]",
            "location": "westeurope",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                "accessPolicies": [
                    {
                        "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                        "objectId": "1fedf586-a7e9-4cf1-99f8-6af58711c9a3",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ]
                        }
                    },
                    {
                        "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                        "objectId": "3c0d49fb-d364-48b0-a572-75ea67984041",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('vaults_woodblockchain_7ty3pq_name')]",
            "location": "westeurope",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                "accessPolicies": [
                    {
                        "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                        "objectId": "5525084e-1f8a-4e76-a2c2-dd75ae664dbe",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3c5984c5-b65b-4c3a-a11e-ffc37acf0912",
                "securityRules": [
                    {
                        "name": "allow-ssh",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow SSH",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "allow-eth-rpc",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow Ethereum RPC",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8540",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "allow-etheradmin",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow etheradmin web service",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3000",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "allow-etheradmin-backend",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow etheradmin backend web service",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3001",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "parity-client-port-inbound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Parity Client Port",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "30300",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "allow-eth-websockets",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow Ethereum WebSockets",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8547",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "parity-client-port-outbound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Parity Client Port",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "30300",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"23484e04-e56e-465d-9d2c-854ebcd76615\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "c1ee82af-c7f8-46b4-a2c7-6780c24c3e72",
                "securityRules": [
                    {
                        "name": "allow-ssh",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"34bc652f-8dd1-4dc6-aa34-85081fc03dda\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-12-01",
            "name": "[parameters('publicIPAddresses_eth7as7h6_lbpip_reg1_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "1762ea39-ace1-4bdc-a081-ecd1e38a952b",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "eth7as7h6-dns-reg1",
                    "fqdn": "eth7as7h6-dns-reg1.westeurope.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-12-01",
            "name": "[parameters('publicIPAddresses_woodblockchain_lb_public_ip_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "51dae96d-228a-45f7-b8a7-e8d2b65344c5",
                "ipAddress": "52.232.113.147",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaces_eth7as7h6_oms_name')]",
            "location": "westeurope",
            "properties": {
                "source": "Azure",
                "customerId": "4b76b750-0586-41c8-95b3-23741f107bec",
                "portalUrl": "[concat('https://weu.mms.microsoft.com/Account?tenant=9b1969b2-22c0-49a5-a966-a0d3fa188252&resource=%2fsubscriptions%2fa43935e4-f66f-4360-840a-b09ce38e51bd%2fresourcegroups%2fwoodblockchain%2fproviders%2fmicrosoft.operationalinsights%2fworkspaces%2f', parameters('workspaces_eth7as7h6_oms_name'))]",
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "standalone"
                },
                "retentionInDays": 31
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2017-04-01",
            "name": "[parameters('namespaces_woodblockchain_sb_7ty3pq_name')]",
            "location": "West Europe",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "metricId": "[concat('a43935e4-f66f-4360-840a-b09ce38e51bd:', parameters('namespaces_woodblockchain_sb_7ty3pq_name'))]",
                "createdAt": "2019-04-22T14:41:19.283Z",
                "updatedAt": "2019-04-22T14:41:42.513Z",
                "serviceBusEndpoint": "[concat('https://', parameters('namespaces_woodblockchain_sb_7ty3pq_name'), '.servicebus.windows.net:443/')]",
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "name": "[parameters('servers_db_7ty3pq_woo_name')]",
            "location": "westeurope",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "dbadmin",
                "version": "12.0"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[parameters('storageAccounts_7ty3pqwoodblockchain_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[parameters('storageAccounts_eth7as7h6store_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[parameters('serverfarms_woodblockchain_plan_name')]",
            "location": "West Europe",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "name": "[parameters('serverfarms_woodblockchain_plan_name')]",
                "perSiteScaling": false,
                "reserved": true,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-10-01",
            "name": "[concat(parameters('virtualMachines_vl_eth7as7h6_reg1_0_name'), '/config')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vl_eth7as7h6_reg1_0_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://catalogartifact.azureedge.net/publicartifacts/microsoft-azure-blockchain.azure-blockchain-workbench-7d8bda3c-aad3-400a-a30d-64ef0399298e-azure-blockchain-workbench/Artifacts/ledger/scripts/configure-poa.sh"
                    ]
                },
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_config_storageAccountName')]",
                    "storageAccountKey": "[parameters('extensions_config_storageAccountKey')]",
                    "commandToExecute": "[parameters('extensions_config_commandToExecute')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-10-01",
            "name": "[concat(parameters('virtualMachines_vl_eth7as7h6_reg1_1_name'), '/config')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vl_eth7as7h6_reg1_1_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://catalogartifact.azureedge.net/publicartifacts/microsoft-azure-blockchain.azure-blockchain-workbench-7d8bda3c-aad3-400a-a30d-64ef0399298e-azure-blockchain-workbench/Artifacts/ledger/scripts/configure-poa.sh"
                    ]
                },
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_config_storageAccountName_1')]",
                    "storageAccountKey": "[parameters('extensions_config_storageAccountKey_1')]",
                    "commandToExecute": "[parameters('extensions_config_commandToExecute_1')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
            "apiVersion": "2018-10-01",
            "name": "[concat(parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'), '/Initialize-Machine')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://catalogartifact.azureedge.net/publicartifacts/microsoft-azure-blockchain.azure-blockchain-workbench-7d8bda3c-aad3-400a-a30d-64ef0399298e-azure-blockchain-workbench/Artifacts/scripts/runScripts.sh"
                    ],
                    "commandToExecute": "sh runScripts.sh http://10.0.17.9:8540 https://catalogartifact.azureedge.net/publicartifacts/microsoft-azure-blockchain.azure-blockchain-workbench-7d8bda3c-aad3-400a-a30d-64ef0399298e-azure-blockchain-workbench/Artifacts https://woodblockchain-7ty3pq.vault.azure.net/ W3sibmFtZSI6IkxvZ2luIHRvIHByaXZhdGUgRG9ja2VyIHJlZ2lzdHJ5IChzaG91bGQgcHJlY2VlZCBhbnkgZG9ja2VyLWNvbXBvc2UgcHVsbCBjb21tYW5kKSIsImNvbW1hbmQiOiJkb2NrZXIgbG9naW4gLXUgJHtET0NLRVJfTE9HSU59IC1wICR7RE9DS0VSX1BBU1NXT1JEfSAke0RPQ0tFUl9SRVBPU0lUT1JZfSIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9MT0dJTiI6IjI5OGNiNmY1LWY3M2EtNDVkYy04M2E3LTE2Y2ZkNWZlNzQ2MSIsIkRPQ0tFUl9QQVNTV09SRCI6IklyTU9qUzAwYUxxUkN2dmsva2MxV1VSQU1YNDRBTHZDdm4rZHVMeW9nMkE9In19LHsibmFtZSI6IkRvd25sb2FkIENvbmZpZyBNYW5hZ2VyIENvbXBvc2UiLCJjb21tYW5kIjoiY3VybCAtZiAtUyAtcyAtLWNvbm5lY3QtdGltZW91dCA1IC0tcmV0cnkgMTUgLW8gL3Jvb3QvZG9ja2VyLWNvbmZpZy1tYW5hZ2VyLWNvbXBvc2UueWFtbCBcImh0dHBzOi8vY2F0YWxvZ2FydGlmYWN0LmF6dXJlZWRnZS5uZXQvcHVibGljYXJ0aWZhY3RzL21pY3Jvc29mdC1henVyZS1ibG9ja2NoYWluLmF6dXJlLWJsb2NrY2hhaW4td29ya2JlbmNoLTdkOGJkYTNjLWFhZDMtNDAwYS1hMzBkLTY0ZWYwMzk5Mjk4ZS1henVyZS1ibG9ja2NoYWluLXdvcmtiZW5jaC9BcnRpZmFjdHMvZG9ja2VyLWNvbXBvc2UuY29uZmlnLW1hbmFnZXIueWFtbFwiIn0seyJuYW1lIjoiQ3JlYXRlIENvbmZpZyBNYW5hZ2VyIiwiY29tbWFuZCI6ImRvY2tlci1jb21wb3NlIC1mIC9yb290L2RvY2tlci1jb25maWctbWFuYWdlci1jb21wb3NlLnlhbWwgdXAgLS1mb3JjZS1yZWNyZWF0ZSIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9UQUciOiIxLjYuMiIsIkFQUExJQ0FUSU9OX0lOU0lHSFRTX0tFWSI6ImQ4YmNhNTI2LTg3NmYtNDAzOC1iNTMyLTYwZjQzZjIzZjJlOSIsIktFWV9WQVVMVF9VUkkiOiJodHRwczovL3dvb2RibG9ja2NoYWluLTd0eTNwcS52YXVsdC5henVyZS5uZXQvIiwiR0VUSF9SUENfRU5EUE9JTlQiOiJodHRwOi8vMTAuMC4xNy45Ojg1NDAiLCJFVkVOVF9HUklEX1RPUElDX0VORFBPSU5UIjoiaHR0cHM6Ly93b29kYmxvY2tjaGFpbi1lZy03dHkzcHEud2VzdGV1cm9wZS0xLmV2ZW50Z3JpZC5henVyZS5uZXQvYXBpL2V2ZW50cyJ9fSx7Im5hbWUiOiJEb3dubG9hZCBTUUwgQ29tcG9zZSIsImNvbW1hbmQiOiJjdXJsIC1mIC1TIC1zIC0tY29ubmVjdC10aW1lb3V0IDUgLS1yZXRyeSAxNSAtbyAvcm9vdC9kb2NrZXItc3FsLWNvbXBvc2UueWFtbCBcImh0dHBzOi8vY2F0YWxvZ2FydGlmYWN0LmF6dXJlZWRnZS5uZXQvcHVibGljYXJ0aWZhY3RzL21pY3Jvc29mdC1henVyZS1ibG9ja2NoYWluLmF6dXJlLWJsb2NrY2hhaW4td29ya2JlbmNoLTdkOGJkYTNjLWFhZDMtNDAwYS1hMzBkLTY0ZWYwMzk5Mjk4ZS1henVyZS1ibG9ja2NoYWluLXdvcmtiZW5jaC9BcnRpZmFjdHMvZG9ja2VyLWNvbXBvc2UuZGIueWFtbFwiIn0seyJuYW1lIjoiUHVsbCBsYXN0ZXN0IGRhdGFiYXNlIGltYWdlcyIsImNvbW1hbmQiOiJkb2NrZXItY29tcG9zZSAtZiAvcm9vdC9kb2NrZXItc3FsLWNvbXBvc2UueWFtbCBwdWxsIiwiZW52aXJvbm1lbnQiOnsiRE9DS0VSX1JFUE9TSVRPUlkiOiJibG9ja2NoYWlud29ya2JlbmNocHJvZC5henVyZWNyLmlvIiwiRE9DS0VSX1RBRyI6IjEuNi4yIn19LHsibmFtZSI6IkNyZWF0ZSBhbmQgVXBkYXRlIERhdGFiYXNlIiwiY29tbWFuZCI6ImRvY2tlci1jb21wb3NlIC1mIC9yb290L2RvY2tlci1zcWwtY29tcG9zZS55YW1sIHVwIC0tZm9yY2UtcmVjcmVhdGUgLS1hYm9ydC1vbi1jb250YWluZXItZXhpdCIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9UQUciOiIxLjYuMiIsIkRBVEFCQVNFX1VSTCI6ImRiLTd0eTNwcS13b28uZGF0YWJhc2Uud2luZG93cy5uZXQiLCJEQVRBQkFTRV9MT0dJTiI6ImRiYWRtaW4iLCJEQVRBQkFTRV9OQU1FIjoiN3R5M3BxLXdvbyIsIkdFVEhfUlBDX0VORFBPSU5UIjoiaHR0cDovLzEwLjAuMTcuOTo4NTQwIn19LHsibmFtZSI6IkRvd25sb2FkV29ya2VyIiwiY29tbWFuZCI6ImN1cmwgLWYgLVMgLXMgLS1jb25uZWN0LXRpbWVvdXQgNSAtLXJldHJ5IDE1IC1vIC9yb290L2RvY2tlci1jb21wb3NlLnlhbWwgXCJodHRwczovL2NhdGFsb2dhcnRpZmFjdC5henVyZWVkZ2UubmV0L3B1YmxpY2FydGlmYWN0cy9taWNyb3NvZnQtYXp1cmUtYmxvY2tjaGFpbi5henVyZS1ibG9ja2NoYWluLXdvcmtiZW5jaC03ZDhiZGEzYy1hYWQzLTQwMGEtYTMwZC02NGVmMDM5OTI5OGUtYXp1cmUtYmxvY2tjaGFpbi13b3JrYmVuY2gvQXJ0aWZhY3RzL2RvY2tlci1jb21wb3NlLnByb2QueWFtbFwiIn0seyJuYW1lIjoiUHVsbCBsYXN0ZXN0IHdvcmtlciBpbWFnZXMiLCJjb21tYW5kIjoiZG9ja2VyLWNvbXBvc2UgLWYgL3Jvb3QvZG9ja2VyLWNvbXBvc2UueWFtbCBwdWxsIiwiZW52aXJvbm1lbnQiOnsiRE9DS0VSX1JFUE9TSVRPUlkiOiJibG9ja2NoYWlud29ya2JlbmNocHJvZC5henVyZWNyLmlvIiwiRE9DS0VSX1RBRyI6IjEuNi4yIn19LHsibmFtZSI6IkNvbXBvc2UgV29ya2VyIiwiY29tbWFuZCI6ImRvY2tlci1jb21wb3NlIC1mIC9yb290L2RvY2tlci1jb21wb3NlLnlhbWwgdXAgLWQgLS1mb3JjZS1yZWNyZWF0ZSIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9UQUciOiIxLjYuMiIsIktFWV9WQVVMVF9VUkkiOiJodHRwczovL3dvb2RibG9ja2NoYWluLTd0eTNwcS52YXVsdC5henVyZS5uZXQvIiwiQVBQTElDQVRJT05fSU5TSUdIVFNfS0VZIjoiZDhiY2E1MjYtODc2Zi00MDM4LWI1MzItNjBmNDNmMjNmMmU5IiwiTE9HX0xFVkVMIjoiMiIsIkNVU1RPTUVSX1NVQlNDUklQVElPTklEIjoiYTQzOTM1ZTQtZjY2Zi00MzYwLTg0MGEtYjA5Y2UzOGU1MWJkIiwiQ1VTVE9NRVJfVEVOQU5USUQiOiI5YjE5NjliMi0yMmMwLTQ5YTUtYTk2Ni1hMGQzZmExODgyNTIiLCJDVVNUT01FUl9ERVBMT1lNRU5USUQiOiI3dHkzcHEifX1d"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[concat(parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'), '/0')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'))]"
            ],
            "sku": {
                "name": "Standard_DS1_v2",
                "tier": "Standard"
            },
            "identity": {
                "principalId": "5525084e-1f8a-4e76-a2c2-dd75ae664dbe",
                "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {},
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04.0-LTS",
                        "version": "16.04.201903130"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "woodblockchain-workewoodblockchain-workerOS__1_b0d5560091bb401d817f864fc6fe3983",
                        "createOption": "FromImage",
                        "caching": "ReadOnly",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[parameters('disks_woodblockchain_workewoodblockchain_workerOS__1_b0d5560091bb401d817f864fc6fe3983_externalid')]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "woodblockchain-worker-n000000",
                    "adminUsername": "padmick",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/padmick/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEAqha1XGnjoxUtwDaPmEa6a2bAkLoddeDcTUhSHIhiu6+R1hn1B7kJy2ldeE/vQZPR1IiZmC4HhKjtC5OtHbxoZ5TtUbvxTKTUuG8t1LGaQc+PmBzaSWJ7BLbmHUkVZAByHaEtypz37Am1b/67SEGTm0kYh2dCq8iuuFKfSH5p+yyhqB9xQodijofisbHcZrfOoltWyObbOvgsK0emLrWxdrYzCO87EHqkCBtVkXP1tfcSBlE/xsg4XR634HGgOYSxrTSjUSgDfUnAkJpxfAVwl6yfS0Zkzh3YZp9kVATlj5CltnnGQDiCWjMI2beqn18iVsw9E6OKOBm9M8Xccf+fuogDqk01XQOfc860td/pXwayp5gqZAEnmm3Srzc2y9iDwg/bETNSIuir5KOaB9oBr3GAElkcLjPMC4lNSS6Xs/g78A1qDqTJrM196S3dNA4kGicfXcpRTm7XRuLtbRu96gwK+DBPGnA23gMcRPMGKtmEHuVFKHANVuiTXC+ZQXNLviXqsIVNX/9pv+NjhPjgI8k1TP6RmTy4CD0EMw10bs1R7EX35ywICNnCCN4DcFsavLBOeY/Ffg1zp1saq5GSAFomgB9yRuP5ArFEnFQGyXKAbsGiNBE98x2MFEd8vY7j4nv0G0/c71QNvKncJOPUb2ulpbggsnB9FPrpHg7xblM="
                                }
                            ]
                        },
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[concat(resourceId('Microsoft.Compute/virtualMachineScaleSets/virtualMachines', parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'), '0'), '/networkInterfaces/nic-woodblockchain-worker-n')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "microsoft.insights/alertrules",
            "apiVersion": "2014-04-01",
            "name": "[parameters('alertrules_Failure_Anomalies___woodblockchain_7ty3pq_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_woodblockchain_7ty3pq_name'))]"
            ],
            "tags": {
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourceGroups/woodblockchain/providers/microsoft.insights/components/woodblockchain-7ty3pq": "Resource"
            },
            "properties": {
                "name": "[parameters('alertrules_Failure_Anomalies___woodblockchain_7ty3pq_name')]",
                "description": "",
                "isEnabled": true,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/components', parameters('components_woodblockchain_7ty3pq_name'))]",
                        "metricName": "advanced::A3108E3D-5E26-44CF-B232-783F5E20EF10::ewAiAEgAeQBwAGUAcgBpAG8AbgBBAHAAcABsAGkAYwBhAHQAaQBvAG4AUwBpAGQAIgA6AG4AdQBsAGwALAAiAEgAeQBwAGUAcgBpAG8AbgBTAHUAYgBqAGUAYwB0AFMAaQBkACIAOgBuAHUAbABsACwAIgBIAHkAcABlAHIAaQBvAG4ATwBiAHMAZQByAHYAZQByAFMAaQBkACIAOgBuAHUAbABsACwAIgBDAHUAcwB0AG8AbQBlAHIAQQBjAGMAbwB1AG4AdABJAGQAIgA6ACIAMAAwADAAMAAwADAAMAAwAC0AMAAwADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AMAAwADAAMAAwADAAMAAwADAAMAAwADAAIgAsACIAQQBwAHAAbABpAGMAYQB0AGkAbwBuAE4AYQBtAGUAIgA6AG4AdQBsAGwALAAiAEEAcABwAGwAaQBjAGEAdABpAG8AbgBJAGQAIgA6AG4AdQBsAGwALAAiAFAAcgBvAGYAaQBsAGUASQBkACIAOgAwACwAIgBXAGkAbgBkAG8AdwBTAGkAegBlAEkAbgBNAGkAbgB1AHQAZQBzACIAOgA2ADAALAAiAE0AZQB0AHIAaQBjAE4AYQBtAGUAIgA6ACIAIgAsACIAVABoAHIAZQBzAGgAbwBsAGQAIgA6ADIALgAwACwAIgBBAGwAZQByAHQAVABlAG0AcABsAGEAdABlAEkAZAAiADoAIgAiACwAIgBSAHUAbABlAEkAZAAiADoAIgAiACwAIgBSAHUAbABlAE4AYQBtAGUAIgA6ACIAIgAsACIAUgB1AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AIgA6ACIAIgAsACIAUgBlAHMAbwB1AHIAYwBlAEkAZAAiADoAbgB1AGwAbAAsACIAUwB1AGIAcwBjAHIAaQBwAHQAaQBvAG4ASQBkACIAOgBuAHUAbABsACwAIgBBAGcAZwByAGUAZwBhAHQAZQBGAHUAbgBjAHQAaQBvAG4AIgA6ACIAIgAsACIAQwBvAG0AcABhAHIAaQBzAG8AbgBPAHAAZQByAGEAdABvAHIAIgA6ACIAewBcACIAQgBhAHMAZQBsAGkAbgBlAFQAaQBtAGUAcwBwAGEAbgBcACIAOgBcACIAMAAwADoANAAwADoAMAAwAFwAIgAsAFwAIgBJAG4AcwBpAGcAaAB0AHMAUwBlAHIAdgBpAGMAZQBMAGEAZwBcACIAOgBcACIAMAAwADoAMAAwADoAMAAwAFwAIgAsAFwAIgBCAHUAZgBmAGUAcgBUAGkAbQBlAFwAIgA6AFwAIgAwADAAOgAwADEAOgAwADAAXAAiACwAXAAiAEIAbABvAGIAUwB0AG8AcgBhAGcAZQBMAG8AZwBnAGkAbgBnAEUAbgBhAGIAbABlAGQAXAAiADoAZgBhAGwAcwBlACwAXAAiAFUAcwBlAHIAUwB1AHAAcAByAGUAcwBzAGkAbwBuAHMAXAAiADoAbgB1AGwAbAAsAFwAIgBQAHIAbwBmAGkAbABlAEkAZABcACIAOgAwACwAXAAiAEUAbQBhAGkAbABUAHkAcABlAFwAIgA6ADAALABcACIAUgBkAGQARgBhAGkAbAB1AHIAZQBzAFMAcABpAGsAZQBUAGgAcgBlAHMAaABvAGwAZABcACIAOgAzAC4AMAAsAFwAIgBSAGEAdwBQAHIAbwBhAGMAdABpAHYAZQBSAHUAbABlAEMAbwBuAGYAaQBnAFwAIgA6AG4AdQBsAGwAfQAiACwAIgBFAG4AYQBiAGwAZQBTAGUAbgBkAEUAbQBhAGkAbABUAG8AQwB1AHMAdABvAG0AIgA6AGYAYQBsAHMAZQAsACIAQwB1AHMAdABvAG0ARQBtAGEAaQBsAHMARQBuAGMAbwBkAGUAZAAiADoAIgAiACwAIgBFAG4AYQBiAGwAZQBTAGUAbgBkAEUAbQBhAGkAbABUAG8ATwB3AG4AZQByAHMAIgA6AGYAYQBsAHMAZQB9AA=="
                    },
                    "operator": "GreaterThan",
                    "threshold": 2,
                    "windowSize": "PT1H"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "type": "microsoft.insights/alertrules",
            "apiVersion": "2014-04-01",
            "name": "[parameters('alertrules_website_api_test_alert_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.insights/webtests', parameters('webtests_website_api_test_name'))]"
            ],
            "tags": {
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourcegroups/woodblockchain/providers/microsoft.insights/components/woodblockchain-7ty3pq": "Resource",
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourcegroups/woodblockchain/providers/microsoft.insights/webtests/website-api-test": "Resource"
            },
            "properties": {
                "name": "[parameters('alertrules_website_api_test_alert_name')]",
                "isEnabled": true,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/webtests', parameters('webtests_website_api_test_name'))]",
                        "metricName": "GSMT_AvRaW"
                    },
                    "windowSize": "PT5M",
                    "failedLocationCount": 3
                }
            }
        },
        {
            "type": "microsoft.insights/alertrules",
            "apiVersion": "2014-04-01",
            "name": "[parameters('alertrules_website_ui_test_alert_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.insights/webtests', parameters('webtests_website_ui_test_name'))]"
            ],
            "tags": {
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourcegroups/woodblockchain/providers/microsoft.insights/components/woodblockchain-7ty3pq": "Resource",
                "hidden-link:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourcegroups/woodblockchain/providers/microsoft.insights/webtests/website-ui-test": "Resource"
            },
            "properties": {
                "name": "[parameters('alertrules_website_ui_test_alert_name')]",
                "isEnabled": true,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/webtests', parameters('webtests_website_ui_test_name'))]",
                        "metricName": "GSMT_AvRaW"
                    },
                    "windowSize": "PT5M",
                    "failedLocationCount": 3
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0x44ee50eb4e7d71e82c9dc71fa4daa785c90bad7f')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0x597694546aad8f7e4e77f6aaf9116bbee9426145')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0x62efa152a60dc4eaac1ae3ecd561cf91306c1fe2')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0x72bf781405195906d7be76da92d0bd509f9fd733')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0x7951b0c84be0625ad61ee4dd0394b5c64c15474e')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0xaa49e928e78447ed6ec56148980f262a4ec77610')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0xbec6b01dd1c104eb59cb8e24ea0ede4f9a2e6697')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/0xf397f1689c006a81e5e8293ecce793aa54bccfc4')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/dbPassword')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/eventGridKey')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_eth7as7h6_akv_name'), '/passphrase-0')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_eth7as7h6_akv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_eth7as7h6_akv_name'), '/passphrase-1')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_eth7as7h6_akv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/serviceBusConnectionString')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/SqlDbConnectionString')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/SqlDbConnectionStringJS')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_woodblockchain_7ty3pq_name'), '/storageAccountConnectionString')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2018-12-01",
            "name": "[parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), 'snet-vl')]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "0c66ed34-5ea2-4b39-97df-8fa2c9cf0f8a",
                "frontendIPConfigurations": [
                    {
                        "name": "LBFrontEnd",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.17.9",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), 'snet-vl')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LBBackendPool",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded"
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LB-Rule1",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 3000,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/backendAddressPools/LBBackendPool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/probes/lbProbe1')]"
                            }
                        }
                    },
                    {
                        "name": "LB-Rule2",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                            },
                            "frontendPort": 8540,
                            "backendPort": 8540,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "SourceIPProtocol",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/backendAddressPools/LBBackendPool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/probes/lbProbe2')]"
                            }
                        }
                    },
                    {
                        "name": "LB-Rule3",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                            },
                            "frontendPort": 3001,
                            "backendPort": 3001,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "SourceIPProtocol",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/backendAddressPools/LBBackendPool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/probes/lbProbe3')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "lbProbe1",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "port": 3000,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "lbProbe2",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "port": 8540,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "lbProbe3",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "port": 3001,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "SSH-vlVM0",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                            },
                            "frontendPort": 4000,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false
                        }
                    },
                    {
                        "name": "SSH-vlVM1",
                        "etag": "W/\"8bf230ae-5a7b-4ba9-8fb7-888874aaae8f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                            },
                            "frontendPort": 4001,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false
                        }
                    }
                ],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2018-12-01",
            "name": "[parameters('loadBalancers_woodblockchain_lb_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_woodblockchain_lb_public_ip_name'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "7d6a54c6-0029-466b-94e5-5aa383b8e357",
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancedPublicIp",
                        "etag": "W/\"fa35cc68-753e-496e-9fa3-f691b4dbb8c3\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_woodblockchain_lb_public_ip_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat(parameters('loadBalancers_woodblockchain_lb_name'), '-bepool')]",
                        "etag": "W/\"fa35cc68-753e-496e-9fa3-f691b4dbb8c3\"",
                        "properties": {
                            "provisioningState": "Succeeded"
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "SSH",
                        "etag": "W/\"fa35cc68-753e-496e-9fa3-f691b4dbb8c3\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_woodblockchain_lb_name')), '/frontendIPConfigurations/LoadBalancedPublicIp')]"
                            },
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "SourceIP",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_woodblockchain_lb_name')), concat('/backendAddressPools/', parameters('loadBalancers_woodblockchain_lb_name'), '-bepool'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_woodblockchain_lb_name')), '/probes/Node-Probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "Node-Probe",
                        "etag": "W/\"fa35cc68-753e-496e-9fa3-f691b4dbb8c3\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'), '/SSH-vlVM0')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                },
                "frontendPort": 4000,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'), '/SSH-vlVM1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/frontendIPConfigurations/LBFrontEnd')]"
                },
                "frontendPort": 4001,
                "backendPort": 22,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/allow-etheradmin')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow etheradmin web service",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3000",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/allow-etheradmin-backend')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow etheradmin backend web service",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3001",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 103,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/allow-eth-rpc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow Ethereum RPC",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8540",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/allow-eth-websockets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow Ethereum WebSockets",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8547",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 105,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/allow-ssh')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow SSH",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name'), '/allow-ssh')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/parity-client-port-inbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Parity Client Port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "30300",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 104,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'), '/parity-client-port-outbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "description": "Parity Client Port",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "30300",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Computers with their most recent data",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Which Management Group is generating the most data points?",
                "Category": "General Exploration",
                "Query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Distribution of data Types",
                "Category": "General Exploration",
                "Query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Stale Computers (data older than 24 hours)",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events",
                "Category": "Log Management",
                "Query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslogs",
                "Category": "Log Management",
                "Query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by Facility",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by ProcessName",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records with Errors",
                "Category": "Log Management",
                "Query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by HTTP Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP Request Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP User Agent",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Host requested by client",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "Category": "Log Management",
                "Query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows breakdown of response codes",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Log",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Source",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events containing the word \"started\" grouped by EventID",
                "Category": "Log Management",
                "Query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Find the maximum time taken for each page",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "Category": "Log Management",
                "Query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All IIS Log Entries",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "How many connections to Operations Manager's SDK service by day",
                "Category": "Log Management",
                "Query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "When did my servers initiate restart?",
                "Category": "Log Management",
                "Query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows which pages people are getting a 404 for",
                "Category": "Log Management",
                "Query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows servers that are throwing internal server error",
                "Category": "Log Management",
                "Query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each Azure Role Instance",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each IIS Computer",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes sent by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events with level \"Warning\"",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "Windows Firewall Policy settings have changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_eth7as7h6_oms_name'), '/LogManagement(', parameters('workspaces_eth7as7h6_oms_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_eth7as7h6_oms_name'))]"
            ],
            "properties": {
                "DisplayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_woodblockchain_sb_7ty3pq_name'), '/ReadWrite')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_woodblockchain_sb_7ty3pq_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_woodblockchain_sb_7ty3pq_name'), '/RootManageSharedAccessKey')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_woodblockchain_sb_7ty3pq_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_woodblockchain_sb_7ty3pq_name'), '/ingressqueue')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_woodblockchain_sb_7ty3pq_name'))]"
            ],
            "properties": {
                "lockDuration": "PT1M",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_woodblockchain_sb_7ty3pq_name'), '/internalqueue')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_woodblockchain_sb_7ty3pq_name'))]"
            ],
            "properties": {
                "lockDuration": "PT1M",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_woodblockchain_sb_7ty3pq_name'), '/egresstopic')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_woodblockchain_sb_7ty3pq_name'))]"
            ],
            "properties": {
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 16384,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": true,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "fullAuditLogsTableName": "SQLDBAuditLogsDb7ty3pqwoo",
                "auditLogsTableName": "Db7ty3pqwoo",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "sku": {
                "name": "S0",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsDb7ty3pqwooMaster",
                "auditLogsTableName": "Db7ty3pqwooMaster",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/master/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "status": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('sites_woodblockchain_7ty3pq_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_woodblockchain_plan_name'))]"
            ],
            "tags": {
                "hidden-related:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourceGroups/woodblockchain/providers/Microsoft.Web/serverfarms/woodblockchain-plan": "empty"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_woodblockchain_7ty3pq_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_woodblockchain_7ty3pq_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_woodblockchain_plan_name'))]",
                "reserved": true,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('sites_woodblockchain_7ty3pq_api_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_woodblockchain_plan_name'))]"
            ],
            "tags": {
                "hidden-related:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourceGroups/woodblockchain/providers/Microsoft.Web/serverfarms/woodblockchain-plan": "empty"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_woodblockchain_7ty3pq_api_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_woodblockchain_7ty3pq_api_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_woodblockchain_plan_name'))]",
                "reserved": true,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_woodblockchain_7ty3pq_name'), '/web')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_woodblockchain_7ty3pq_name'))]"
            ],
            "tags": {
                "hidden-related:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourceGroups/woodblockchain/providers/Microsoft.Web/serverfarms/woodblockchain-plan": "empty"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "DOCKER|blockchainworkbenchprod.azurecr.io/webapp:1.6.2",
                "requestTracingEnabled": true,
                "requestTracingExpirationTime": "9999-12-31T23:59:00Z",
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": true,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": true,
                "publishingUsername": "$woodblockchain-7ty3pq",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "localMySqlEnabled": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_woodblockchain_7ty3pq_api_name'), '/web')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_woodblockchain_7ty3pq_api_name'))]"
            ],
            "tags": {
                "hidden-related:/subscriptions/a43935e4-f66f-4360-840a-b09ce38e51bd/resourceGroups/woodblockchain/providers/Microsoft.Web/serverfarms/woodblockchain-plan": "empty"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "DOCKER|blockchainworkbenchprod.azurecr.io/appbuilder.api:1.6.2",
                "requestTracingEnabled": true,
                "requestTracingExpirationTime": "9999-12-31T23:59:00Z",
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": true,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": true,
                "publishingUsername": "$woodblockchain-7ty3pq-api",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "localMySqlEnabled": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_woodblockchain_7ty3pq_name'), '/', parameters('sites_woodblockchain_7ty3pq_name'), '.azurewebsites.net')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_woodblockchain_7ty3pq_name'))]"
            ],
            "properties": {
                "siteName": "woodblockchain-7ty3pq",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_woodblockchain_7ty3pq_api_name'), '/', parameters('sites_woodblockchain_7ty3pq_api_name'), '.azurewebsites.net')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_woodblockchain_7ty3pq_api_name'))]"
            ],
            "properties": {
                "siteName": "woodblockchain-7ty3pq-api",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2018-10-01",
            "name": "[parameters('availabilitySets_poaAvailabilitySet_reg1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vl_eth7as7h6_reg1_0_name'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vl_eth7as7h6_reg1_1_name'))]"
            ],
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vl_eth7as7h6_reg1_0_name'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vl_eth7as7h6_reg1_1_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('virtualMachines_vl_eth7as7h6_reg1_0_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_poaAvailabilitySet_reg1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vl_nic0_reg1_name'))]"
            ],
            "identity": {
                "principalId": "1fedf586-a7e9-4cf1-99f8-6af58711c9a3",
                "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                "type": "SystemAssigned"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_poaAvailabilitySet_reg1_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "16.04.201801120"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_vl_eth7as7h6_reg1_0_name'), '_OsDisk_1_5267dd0277844fd1be703eac1ca712d2')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vl_eth7as7h6_reg1_0_name'), '_OsDisk_1_5267dd0277844fd1be703eac1ca712d2'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vl_eth7as7h6_reg1_0_name')]",
                    "adminUsername": "padmick",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/padmick/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEAqha1XGnjoxUtwDaPmEa6a2bAkLoddeDcTUhSHIhiu6+R1hn1B7kJy2ldeE/vQZPR1IiZmC4HhKjtC5OtHbxoZ5TtUbvxTKTUuG8t1LGaQc+PmBzaSWJ7BLbmHUkVZAByHaEtypz37Am1b/67SEGTm0kYh2dCq8iuuFKfSH5p+yyhqB9xQodijofisbHcZrfOoltWyObbOvgsK0emLrWxdrYzCO87EHqkCBtVkXP1tfcSBlE/xsg4XR634HGgOYSxrTSjUSgDfUnAkJpxfAVwl6yfS0Zkzh3YZp9kVATlj5CltnnGQDiCWjMI2beqn18iVsw9E6OKOBm9M8Xccf+fuogDqk01XQOfc860td/pXwayp5gqZAEnmm3Srzc2y9iDwg/bETNSIuir5KOaB9oBr3GAElkcLjPMC4lNSS6Xs/g78A1qDqTJrM196S3dNA4kGicfXcpRTm7XRuLtbRu96gwK+DBPGnA23gMcRPMGKtmEHuVFKHANVuiTXC+ZQXNLviXqsIVNX/9pv+NjhPjgI8k1TP6RmTy4CD0EMw10bs1R7EX35ywICNnCCN4DcFsavLBOeY/Ffg1zp1saq5GSAFomgB9yRuP5ArFEnFQGyXKAbsGiNBE98x2MFEd8vY7j4nv0G0/c71QNvKncJOPUb2ulpbggsnB9FPrpHg7xblM="
                                }
                            ]
                        },
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vl_nic0_reg1_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('virtualMachines_vl_eth7as7h6_reg1_1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_poaAvailabilitySet_reg1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vl_nic1_reg1_name'))]"
            ],
            "identity": {
                "principalId": "3c0d49fb-d364-48b0-a572-75ea67984041",
                "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                "type": "SystemAssigned"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_poaAvailabilitySet_reg1_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "16.04.201801120"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_vl_eth7as7h6_reg1_1_name'), '_OsDisk_1_93cbb63dbbdd4c80bce7dd322c0806dc')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vl_eth7as7h6_reg1_1_name'), '_OsDisk_1_93cbb63dbbdd4c80bce7dd322c0806dc'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vl_eth7as7h6_reg1_1_name')]",
                    "adminUsername": "padmick",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/padmick/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEAqha1XGnjoxUtwDaPmEa6a2bAkLoddeDcTUhSHIhiu6+R1hn1B7kJy2ldeE/vQZPR1IiZmC4HhKjtC5OtHbxoZ5TtUbvxTKTUuG8t1LGaQc+PmBzaSWJ7BLbmHUkVZAByHaEtypz37Am1b/67SEGTm0kYh2dCq8iuuFKfSH5p+yyhqB9xQodijofisbHcZrfOoltWyObbOvgsK0emLrWxdrYzCO87EHqkCBtVkXP1tfcSBlE/xsg4XR634HGgOYSxrTSjUSgDfUnAkJpxfAVwl6yfS0Zkzh3YZp9kVATlj5CltnnGQDiCWjMI2beqn18iVsw9E6OKOBm9M8Xccf+fuogDqk01XQOfc860td/pXwayp5gqZAEnmm3Srzc2y9iDwg/bETNSIuir5KOaB9oBr3GAElkcLjPMC4lNSS6Xs/g78A1qDqTJrM196S3dNA4kGicfXcpRTm7XRuLtbRu96gwK+DBPGnA23gMcRPMGKtmEHuVFKHANVuiTXC+ZQXNLviXqsIVNX/9pv+NjhPjgI8k1TP6RmTy4CD0EMw10bs1R7EX35ywICNnCCN4DcFsavLBOeY/Ffg1zp1saq5GSAFomgB9yRuP5ArFEnFQGyXKAbsGiNBE98x2MFEd8vY7j4nv0G0/c71QNvKncJOPUb2ulpbggsnB9FPrpHg7xblM="
                                }
                            ]
                        },
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vl_nic1_reg1_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2018-10-01",
            "name": "[parameters('virtualMachineScaleSets_woodblockchain_worker_n_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_woodblockchain_vnet_name'), 'woodblockchain-subnet-workers')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_woodblockchain_lb_name'))]"
            ],
            "sku": {
                "name": "Standard_DS1_v2",
                "tier": "Standard",
                "capacity": 1
            },
            "identity": {
                "principalId": "5525084e-1f8a-4e76-a2c2-dd75ae664dbe",
                "tenantId": "9b1969b2-22c0-49a5-a966-a0d3fa188252",
                "type": "SystemAssigned"
            },
            "properties": {
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[parameters('virtualMachineScaleSets_woodblockchain_worker_n_name')]",
                        "adminUsername": "padmick",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/padmick/.ssh/authorized_keys",
                                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEAqha1XGnjoxUtwDaPmEa6a2bAkLoddeDcTUhSHIhiu6+R1hn1B7kJy2ldeE/vQZPR1IiZmC4HhKjtC5OtHbxoZ5TtUbvxTKTUuG8t1LGaQc+PmBzaSWJ7BLbmHUkVZAByHaEtypz37Am1b/67SEGTm0kYh2dCq8iuuFKfSH5p+yyhqB9xQodijofisbHcZrfOoltWyObbOvgsK0emLrWxdrYzCO87EHqkCBtVkXP1tfcSBlE/xsg4XR634HGgOYSxrTSjUSgDfUnAkJpxfAVwl6yfS0Zkzh3YZp9kVATlj5CltnnGQDiCWjMI2beqn18iVsw9E6OKOBm9M8Xccf+fuogDqk01XQOfc860td/pXwayp5gqZAEnmm3Srzc2y9iDwg/bETNSIuir5KOaB9oBr3GAElkcLjPMC4lNSS6Xs/g78A1qDqTJrM196S3dNA4kGicfXcpRTm7XRuLtbRu96gwK+DBPGnA23gMcRPMGKtmEHuVFKHANVuiTXC+ZQXNLviXqsIVNX/9pv+NjhPjgI8k1TP6RmTy4CD0EMw10bs1R7EX35ywICNnCCN4DcFsavLBOeY/Ffg1zp1saq5GSAFomgB9yRuP5ArFEnFQGyXKAbsGiNBE98x2MFEd8vY7j4nv0G0/c71QNvKncJOPUb2ulpbggsnB9FPrpHg7xblM="
                                    }
                                ]
                            },
                            "provisionVMAgent": true
                        },
                        "secrets": []
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "16.04.0-LTS",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat('nic-', parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'))]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "dnsSettings": {
                                        "dnsServers": []
                                    },
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat('ipconfig-', parameters('virtualMachineScaleSets_woodblockchain_worker_n_name'))]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_woodblockchain_vnet_name'), 'woodblockchain-subnet-workers')]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_woodblockchain_lb_name')), '/backendAddressPools/woodblockchain-lb-bepool')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "properties": {
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "https://catalogartifact.azureedge.net/publicartifacts/microsoft-azure-blockchain.azure-blockchain-workbench-7d8bda3c-aad3-400a-a30d-64ef0399298e-azure-blockchain-workbench/Artifacts/scripts/runScripts.sh"
                                        ],
                                        "commandToExecute": "sh runScripts.sh http://10.0.17.9:8540 https://catalogartifact.azureedge.net/publicartifacts/microsoft-azure-blockchain.azure-blockchain-workbench-7d8bda3c-aad3-400a-a30d-64ef0399298e-azure-blockchain-workbench/Artifacts https://woodblockchain-7ty3pq.vault.azure.net/ W3sibmFtZSI6IkxvZ2luIHRvIHByaXZhdGUgRG9ja2VyIHJlZ2lzdHJ5IChzaG91bGQgcHJlY2VlZCBhbnkgZG9ja2VyLWNvbXBvc2UgcHVsbCBjb21tYW5kKSIsImNvbW1hbmQiOiJkb2NrZXIgbG9naW4gLXUgJHtET0NLRVJfTE9HSU59IC1wICR7RE9DS0VSX1BBU1NXT1JEfSAke0RPQ0tFUl9SRVBPU0lUT1JZfSIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9MT0dJTiI6IjI5OGNiNmY1LWY3M2EtNDVkYy04M2E3LTE2Y2ZkNWZlNzQ2MSIsIkRPQ0tFUl9QQVNTV09SRCI6IklyTU9qUzAwYUxxUkN2dmsva2MxV1VSQU1YNDRBTHZDdm4rZHVMeW9nMkE9In19LHsibmFtZSI6IkRvd25sb2FkIENvbmZpZyBNYW5hZ2VyIENvbXBvc2UiLCJjb21tYW5kIjoiY3VybCAtZiAtUyAtcyAtLWNvbm5lY3QtdGltZW91dCA1IC0tcmV0cnkgMTUgLW8gL3Jvb3QvZG9ja2VyLWNvbmZpZy1tYW5hZ2VyLWNvbXBvc2UueWFtbCBcImh0dHBzOi8vY2F0YWxvZ2FydGlmYWN0LmF6dXJlZWRnZS5uZXQvcHVibGljYXJ0aWZhY3RzL21pY3Jvc29mdC1henVyZS1ibG9ja2NoYWluLmF6dXJlLWJsb2NrY2hhaW4td29ya2JlbmNoLTdkOGJkYTNjLWFhZDMtNDAwYS1hMzBkLTY0ZWYwMzk5Mjk4ZS1henVyZS1ibG9ja2NoYWluLXdvcmtiZW5jaC9BcnRpZmFjdHMvZG9ja2VyLWNvbXBvc2UuY29uZmlnLW1hbmFnZXIueWFtbFwiIn0seyJuYW1lIjoiQ3JlYXRlIENvbmZpZyBNYW5hZ2VyIiwiY29tbWFuZCI6ImRvY2tlci1jb21wb3NlIC1mIC9yb290L2RvY2tlci1jb25maWctbWFuYWdlci1jb21wb3NlLnlhbWwgdXAgLS1mb3JjZS1yZWNyZWF0ZSIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9UQUciOiIxLjYuMiIsIkFQUExJQ0FUSU9OX0lOU0lHSFRTX0tFWSI6ImQ4YmNhNTI2LTg3NmYtNDAzOC1iNTMyLTYwZjQzZjIzZjJlOSIsIktFWV9WQVVMVF9VUkkiOiJodHRwczovL3dvb2RibG9ja2NoYWluLTd0eTNwcS52YXVsdC5henVyZS5uZXQvIiwiR0VUSF9SUENfRU5EUE9JTlQiOiJodHRwOi8vMTAuMC4xNy45Ojg1NDAiLCJFVkVOVF9HUklEX1RPUElDX0VORFBPSU5UIjoiaHR0cHM6Ly93b29kYmxvY2tjaGFpbi1lZy03dHkzcHEud2VzdGV1cm9wZS0xLmV2ZW50Z3JpZC5henVyZS5uZXQvYXBpL2V2ZW50cyJ9fSx7Im5hbWUiOiJEb3dubG9hZCBTUUwgQ29tcG9zZSIsImNvbW1hbmQiOiJjdXJsIC1mIC1TIC1zIC0tY29ubmVjdC10aW1lb3V0IDUgLS1yZXRyeSAxNSAtbyAvcm9vdC9kb2NrZXItc3FsLWNvbXBvc2UueWFtbCBcImh0dHBzOi8vY2F0YWxvZ2FydGlmYWN0LmF6dXJlZWRnZS5uZXQvcHVibGljYXJ0aWZhY3RzL21pY3Jvc29mdC1henVyZS1ibG9ja2NoYWluLmF6dXJlLWJsb2NrY2hhaW4td29ya2JlbmNoLTdkOGJkYTNjLWFhZDMtNDAwYS1hMzBkLTY0ZWYwMzk5Mjk4ZS1henVyZS1ibG9ja2NoYWluLXdvcmtiZW5jaC9BcnRpZmFjdHMvZG9ja2VyLWNvbXBvc2UuZGIueWFtbFwiIn0seyJuYW1lIjoiUHVsbCBsYXN0ZXN0IGRhdGFiYXNlIGltYWdlcyIsImNvbW1hbmQiOiJkb2NrZXItY29tcG9zZSAtZiAvcm9vdC9kb2NrZXItc3FsLWNvbXBvc2UueWFtbCBwdWxsIiwiZW52aXJvbm1lbnQiOnsiRE9DS0VSX1JFUE9TSVRPUlkiOiJibG9ja2NoYWlud29ya2JlbmNocHJvZC5henVyZWNyLmlvIiwiRE9DS0VSX1RBRyI6IjEuNi4yIn19LHsibmFtZSI6IkNyZWF0ZSBhbmQgVXBkYXRlIERhdGFiYXNlIiwiY29tbWFuZCI6ImRvY2tlci1jb21wb3NlIC1mIC9yb290L2RvY2tlci1zcWwtY29tcG9zZS55YW1sIHVwIC0tZm9yY2UtcmVjcmVhdGUgLS1hYm9ydC1vbi1jb250YWluZXItZXhpdCIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9UQUciOiIxLjYuMiIsIkRBVEFCQVNFX1VSTCI6ImRiLTd0eTNwcS13b28uZGF0YWJhc2Uud2luZG93cy5uZXQiLCJEQVRBQkFTRV9MT0dJTiI6ImRiYWRtaW4iLCJEQVRBQkFTRV9OQU1FIjoiN3R5M3BxLXdvbyIsIkdFVEhfUlBDX0VORFBPSU5UIjoiaHR0cDovLzEwLjAuMTcuOTo4NTQwIn19LHsibmFtZSI6IkRvd25sb2FkV29ya2VyIiwiY29tbWFuZCI6ImN1cmwgLWYgLVMgLXMgLS1jb25uZWN0LXRpbWVvdXQgNSAtLXJldHJ5IDE1IC1vIC9yb290L2RvY2tlci1jb21wb3NlLnlhbWwgXCJodHRwczovL2NhdGFsb2dhcnRpZmFjdC5henVyZWVkZ2UubmV0L3B1YmxpY2FydGlmYWN0cy9taWNyb3NvZnQtYXp1cmUtYmxvY2tjaGFpbi5henVyZS1ibG9ja2NoYWluLXdvcmtiZW5jaC03ZDhiZGEzYy1hYWQzLTQwMGEtYTMwZC02NGVmMDM5OTI5OGUtYXp1cmUtYmxvY2tjaGFpbi13b3JrYmVuY2gvQXJ0aWZhY3RzL2RvY2tlci1jb21wb3NlLnByb2QueWFtbFwiIn0seyJuYW1lIjoiUHVsbCBsYXN0ZXN0IHdvcmtlciBpbWFnZXMiLCJjb21tYW5kIjoiZG9ja2VyLWNvbXBvc2UgLWYgL3Jvb3QvZG9ja2VyLWNvbXBvc2UueWFtbCBwdWxsIiwiZW52aXJvbm1lbnQiOnsiRE9DS0VSX1JFUE9TSVRPUlkiOiJibG9ja2NoYWlud29ya2JlbmNocHJvZC5henVyZWNyLmlvIiwiRE9DS0VSX1RBRyI6IjEuNi4yIn19LHsibmFtZSI6IkNvbXBvc2UgV29ya2VyIiwiY29tbWFuZCI6ImRvY2tlci1jb21wb3NlIC1mIC9yb290L2RvY2tlci1jb21wb3NlLnlhbWwgdXAgLWQgLS1mb3JjZS1yZWNyZWF0ZSIsImVudmlyb25tZW50Ijp7IkRPQ0tFUl9SRVBPU0lUT1JZIjoiYmxvY2tjaGFpbndvcmtiZW5jaHByb2QuYXp1cmVjci5pbyIsIkRPQ0tFUl9UQUciOiIxLjYuMiIsIktFWV9WQVVMVF9VUkkiOiJodHRwczovL3dvb2RibG9ja2NoYWluLTd0eTNwcS52YXVsdC5henVyZS5uZXQvIiwiQVBQTElDQVRJT05fSU5TSUdIVFNfS0VZIjoiZDhiY2E1MjYtODc2Zi00MDM4LWI1MzItNjBmNDNmMjNmMmU5IiwiTE9HX0xFVkVMIjoiMiIsIkNVU1RPTUVSX1NVQlNDUklQVElPTklEIjoiYTQzOTM1ZTQtZjY2Zi00MzYwLTg0MGEtYjA5Y2UzOGU1MWJkIiwiQ1VTVE9NRVJfVEVOQU5USUQiOiI5YjE5NjliMi0yMmMwLTQ5YTUtYTk2Ni1hMGQzZmExODgyNTIiLCJDVVNUT01FUl9ERVBMT1lNRU5USUQiOiI3dHkzcHEifX1d"
                                    },
                                    "publisher": "Microsoft.Azure.Extensions",
                                    "type": "CustomScript",
                                    "typeHandlerVersion": "2.0"
                                },
                                "name": "Initialize-Machine"
                            }
                        ]
                    }
                },
                "overprovision": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-12-01",
            "name": "[parameters('virtualNetworks_eth7as7h6_vnet_reg1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_woodblockchain_vnet_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "2c4a1679-70b0-4a67-9461-957d2a76dfcc",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.16.0/20"
                    ]
                },
                "subnets": [
                    {
                        "name": "snet-vl",
                        "etag": "W/\"1f602493-020d-413d-b4a0-8879bb287f72\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.17.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
                            },
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "workbench-to-blockchain-peering",
                        "etag": "W/\"1f602493-020d-413d-b4a0-8879bb287f72\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_woodblockchain_vnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.255.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-12-01",
            "name": "[parameters('virtualNetworks_woodblockchain_vnet_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "bb9772c9-1353-4e09-a8fe-fefb3edec5f7",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.255.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "woodblockchain-subnet-workers",
                        "etag": "W/\"513158c8-0de7-4377-b9a4-c09511b2ebdb\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.255.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name'))]"
                            },
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "workbench-to-blockchain-peering",
                        "etag": "W/\"513158c8-0de7-4377-b9a4-c09511b2ebdb\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.16.0/20"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), '/snet-vl')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.17.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
                },
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('virtualNetworks_woodblockchain_vnet_name'), '/woodblockchain-subnet-workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_woodblockchain_vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.255.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_woodblockchain_subnet_workers_nsg_name'))]"
                },
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), '/workbench-to-blockchain-peering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_woodblockchain_vnet_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_woodblockchain_vnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.255.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('virtualNetworks_woodblockchain_vnet_name'), '/workbench-to-blockchain-peering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_woodblockchain_vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.16.0/20"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsDb7ty3pqwoo7ty3pqwoo",
                "auditLogsTableName": "Db7ty3pqwoo7ty3pqwoo",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "storageEndpoint": "",
                "storageAccountAccessKey": "",
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_db_7ty3pq_woo_name'), '/7ty3pq-woo/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_db_7ty3pq_woo_name'), '7ty3pq-woo')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_db_7ty3pq_woo_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkInterfaces_vl_nic0_reg1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), 'snet-vl')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'), 'SSH-vlVM0')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3a7ab04b-1dfa-44f5-9d36-01471ade6b92",
                "ipConfigurations": [
                    {
                        "name": "vl-ipconfig",
                        "etag": "W/\"4818dbe3-bac0-44d5-a56c-7158988f5f77\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.17.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), 'snet-vl')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/backendAddressPools/LBBackendPool')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'), 'SSH-vlVM0')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "peleulfqobtuvfdbsv4su3w5ze.ax.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-3A-22-C7",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkInterfaces_vl_nic1_reg1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), 'snet-vl')]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'), 'SSH-vlVM1')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "ee5b0038-4469-450d-87fa-65eb37d86d6a",
                "ipConfigurations": [
                    {
                        "name": "vl-ipconfig",
                        "etag": "W/\"fa3b269a-36a7-4cf0-b503-d9399eacc242\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.17.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_eth7as7h6_vnet_reg1_name'), 'snet-vl')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name')), '/backendAddressPools/LBBackendPool')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', parameters('loadBalancers_eth7as7h6_vlLb_reg1_name'), 'SSH-vlVM1')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "peleulfqobtuvfdbsv4su3w5ze.ax.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-3A-26-77",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_eth7as7h6_vlNsg_reg1_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        }
    ]
}